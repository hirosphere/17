

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Dec 25 10:41:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F18313 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0097                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  018C                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  028C                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0297                     	;# 
   171  0298                     	;# 
   172  030C                     	;# 
   173  038C                     	;# 
   174  0391                     	;# 
   175  0392                     	;# 
   176  0393                     	;# 
   177  039A                     	;# 
   178  039C                     	;# 
   179  039D                     	;# 
   180  039E                     	;# 
   181  039F                     	;# 
   182  0498                     	;# 
   183  0498                     	;# 
   184  0499                     	;# 
   185  049A                     	;# 
   186  049B                     	;# 
   187  049B                     	;# 
   188  049C                     	;# 
   189  049D                     	;# 
   190  049E                     	;# 
   191  049F                     	;# 
   192  0617                     	;# 
   193  0618                     	;# 
   194  0619                     	;# 
   195  0619                     	;# 
   196  061A                     	;# 
   197  061B                     	;# 
   198  061C                     	;# 
   199  061C                     	;# 
   200  0691                     	;# 
   201  0692                     	;# 
   202  0693                     	;# 
   203  0694                     	;# 
   204  0695                     	;# 
   205  0696                     	;# 
   206  0697                     	;# 
   207  0698                     	;# 
   208  0699                     	;# 
   209  0891                     	;# 
   210  0891                     	;# 
   211  0891                     	;# 
   212  0891                     	;# 
   213  0891                     	;# 
   214  0891                     	;# 
   215  0892                     	;# 
   216  0892                     	;# 
   217  0892                     	;# 
   218  0893                     	;# 
   219  0893                     	;# 
   220  0893                     	;# 
   221  0893                     	;# 
   222  0893                     	;# 
   223  0893                     	;# 
   224  0894                     	;# 
   225  0894                     	;# 
   226  0894                     	;# 
   227  0895                     	;# 
   228  0895                     	;# 
   229  0895                     	;# 
   230  0896                     	;# 
   231  0896                     	;# 
   232  0896                     	;# 
   233  089B                     	;# 
   234  0911                     	;# 
   235  0912                     	;# 
   236  0913                     	;# 
   237  0914                     	;# 
   238  0915                     	;# 
   239  0916                     	;# 
   240  0918                     	;# 
   241  0919                     	;# 
   242  091A                     	;# 
   243  091B                     	;# 
   244  091C                     	;# 
   245  091D                     	;# 
   246  091E                     	;# 
   247  091F                     	;# 
   248  0E0F                     	;# 
   249  0E10                     	;# 
   250  0E11                     	;# 
   251  0E12                     	;# 
   252  0E13                     	;# 
   253  0E14                     	;# 
   254  0E15                     	;# 
   255  0E18                     	;# 
   256  0E1A                     	;# 
   257  0E1B                     	;# 
   258  0E1C                     	;# 
   259  0E20                     	;# 
   260  0E21                     	;# 
   261  0E22                     	;# 
   262  0E24                     	;# 
   263  0E25                     	;# 
   264  0E28                     	;# 
   265  0E29                     	;# 
   266  0E2A                     	;# 
   267  0E2B                     	;# 
   268  0E90                     	;# 
   269  0E91                     	;# 
   270  0E92                     	;# 
   271  0E94                     	;# 
   272  0E95                     	;# 
   273  0F0F                     	;# 
   274  0F10                     	;# 
   275  0F11                     	;# 
   276  0F12                     	;# 
   277  0F13                     	;# 
   278  0F14                     	;# 
   279  0F15                     	;# 
   280  0F16                     	;# 
   281  0F17                     	;# 
   282  0F18                     	;# 
   283  0F19                     	;# 
   284  0F1A                     	;# 
   285  0F1B                     	;# 
   286  0F1C                     	;# 
   287  0F1D                     	;# 
   288  0F1E                     	;# 
   289  0F1F                     	;# 
   290  0F20                     	;# 
   291  0F21                     	;# 
   292  0F22                     	;# 
   293  0F23                     	;# 
   294  0FE4                     	;# 
   295  0FE5                     	;# 
   296  0FE6                     	;# 
   297  0FE7                     	;# 
   298  0FE8                     	;# 
   299  0FE9                     	;# 
   300  0FEA                     	;# 
   301  0FEB                     	;# 
   302  0FED                     	;# 
   303  0FEE                     	;# 
   304  0FEF                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  008C                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0097                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  0111                     	;# 
   352  0112                     	;# 
   353  0115                     	;# 
   354  0116                     	;# 
   355  0117                     	;# 
   356  0118                     	;# 
   357  0119                     	;# 
   358  018C                     	;# 
   359  0197                     	;# 
   360  0199                     	;# 
   361  0199                     	;# 
   362  0199                     	;# 
   363  019A                     	;# 
   364  019A                     	;# 
   365  019A                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019C                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019D                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019E                     	;# 
   379  019E                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  020C                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0216                     	;# 
   399  0216                     	;# 
   400  0217                     	;# 
   401  0217                     	;# 
   402  028C                     	;# 
   403  0291                     	;# 
   404  0291                     	;# 
   405  0292                     	;# 
   406  0293                     	;# 
   407  0294                     	;# 
   408  0295                     	;# 
   409  0295                     	;# 
   410  0296                     	;# 
   411  0297                     	;# 
   412  0298                     	;# 
   413  030C                     	;# 
   414  038C                     	;# 
   415  0391                     	;# 
   416  0392                     	;# 
   417  0393                     	;# 
   418  039A                     	;# 
   419  039C                     	;# 
   420  039D                     	;# 
   421  039E                     	;# 
   422  039F                     	;# 
   423  0498                     	;# 
   424  0498                     	;# 
   425  0499                     	;# 
   426  049A                     	;# 
   427  049B                     	;# 
   428  049B                     	;# 
   429  049C                     	;# 
   430  049D                     	;# 
   431  049E                     	;# 
   432  049F                     	;# 
   433  0617                     	;# 
   434  0618                     	;# 
   435  0619                     	;# 
   436  0619                     	;# 
   437  061A                     	;# 
   438  061B                     	;# 
   439  061C                     	;# 
   440  061C                     	;# 
   441  0691                     	;# 
   442  0692                     	;# 
   443  0693                     	;# 
   444  0694                     	;# 
   445  0695                     	;# 
   446  0696                     	;# 
   447  0697                     	;# 
   448  0698                     	;# 
   449  0699                     	;# 
   450  0891                     	;# 
   451  0891                     	;# 
   452  0891                     	;# 
   453  0891                     	;# 
   454  0891                     	;# 
   455  0891                     	;# 
   456  0892                     	;# 
   457  0892                     	;# 
   458  0892                     	;# 
   459  0893                     	;# 
   460  0893                     	;# 
   461  0893                     	;# 
   462  0893                     	;# 
   463  0893                     	;# 
   464  0893                     	;# 
   465  0894                     	;# 
   466  0894                     	;# 
   467  0894                     	;# 
   468  0895                     	;# 
   469  0895                     	;# 
   470  0895                     	;# 
   471  0896                     	;# 
   472  0896                     	;# 
   473  0896                     	;# 
   474  089B                     	;# 
   475  0911                     	;# 
   476  0912                     	;# 
   477  0913                     	;# 
   478  0914                     	;# 
   479  0915                     	;# 
   480  0916                     	;# 
   481  0918                     	;# 
   482  0919                     	;# 
   483  091A                     	;# 
   484  091B                     	;# 
   485  091C                     	;# 
   486  091D                     	;# 
   487  091E                     	;# 
   488  091F                     	;# 
   489  0E0F                     	;# 
   490  0E10                     	;# 
   491  0E11                     	;# 
   492  0E12                     	;# 
   493  0E13                     	;# 
   494  0E14                     	;# 
   495  0E15                     	;# 
   496  0E18                     	;# 
   497  0E1A                     	;# 
   498  0E1B                     	;# 
   499  0E1C                     	;# 
   500  0E20                     	;# 
   501  0E21                     	;# 
   502  0E22                     	;# 
   503  0E24                     	;# 
   504  0E25                     	;# 
   505  0E28                     	;# 
   506  0E29                     	;# 
   507  0E2A                     	;# 
   508  0E2B                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E94                     	;# 
   513  0E95                     	;# 
   514  0F0F                     	;# 
   515  0F10                     	;# 
   516  0F11                     	;# 
   517  0F12                     	;# 
   518  0F13                     	;# 
   519  0F14                     	;# 
   520  0F15                     	;# 
   521  0F16                     	;# 
   522  0F17                     	;# 
   523  0F18                     	;# 
   524  0F19                     	;# 
   525  0F1A                     	;# 
   526  0F1B                     	;# 
   527  0F1C                     	;# 
   528  0F1D                     	;# 
   529  0F1E                     	;# 
   530  0F1F                     	;# 
   531  0F20                     	;# 
   532  0F21                     	;# 
   533  0F22                     	;# 
   534  0F23                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0097                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  010C                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0115                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  0118                     	;# 
   598  0119                     	;# 
   599  018C                     	;# 
   600  0197                     	;# 
   601  0199                     	;# 
   602  0199                     	;# 
   603  0199                     	;# 
   604  019A                     	;# 
   605  019A                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019C                     	;# 
   615  019D                     	;# 
   616  019D                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019E                     	;# 
   620  019E                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  028C                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0294                     	;# 
   649  0295                     	;# 
   650  0295                     	;# 
   651  0296                     	;# 
   652  0297                     	;# 
   653  0298                     	;# 
   654  030C                     	;# 
   655  038C                     	;# 
   656  0391                     	;# 
   657  0392                     	;# 
   658  0393                     	;# 
   659  039A                     	;# 
   660  039C                     	;# 
   661  039D                     	;# 
   662  039E                     	;# 
   663  039F                     	;# 
   664  0498                     	;# 
   665  0498                     	;# 
   666  0499                     	;# 
   667  049A                     	;# 
   668  049B                     	;# 
   669  049B                     	;# 
   670  049C                     	;# 
   671  049D                     	;# 
   672  049E                     	;# 
   673  049F                     	;# 
   674  0617                     	;# 
   675  0618                     	;# 
   676  0619                     	;# 
   677  0619                     	;# 
   678  061A                     	;# 
   679  061B                     	;# 
   680  061C                     	;# 
   681  061C                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0696                     	;# 
   688  0697                     	;# 
   689  0698                     	;# 
   690  0699                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0891                     	;# 
   694  0891                     	;# 
   695  0891                     	;# 
   696  0891                     	;# 
   697  0892                     	;# 
   698  0892                     	;# 
   699  0892                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0893                     	;# 
   703  0893                     	;# 
   704  0893                     	;# 
   705  0893                     	;# 
   706  0894                     	;# 
   707  0894                     	;# 
   708  0894                     	;# 
   709  0895                     	;# 
   710  0895                     	;# 
   711  0895                     	;# 
   712  0896                     	;# 
   713  0896                     	;# 
   714  0896                     	;# 
   715  089B                     	;# 
   716  0911                     	;# 
   717  0912                     	;# 
   718  0913                     	;# 
   719  0914                     	;# 
   720  0915                     	;# 
   721  0916                     	;# 
   722  0918                     	;# 
   723  0919                     	;# 
   724  091A                     	;# 
   725  091B                     	;# 
   726  091C                     	;# 
   727  091D                     	;# 
   728  091E                     	;# 
   729  091F                     	;# 
   730  0E0F                     	;# 
   731  0E10                     	;# 
   732  0E11                     	;# 
   733  0E12                     	;# 
   734  0E13                     	;# 
   735  0E14                     	;# 
   736  0E15                     	;# 
   737  0E18                     	;# 
   738  0E1A                     	;# 
   739  0E1B                     	;# 
   740  0E1C                     	;# 
   741  0E20                     	;# 
   742  0E21                     	;# 
   743  0E22                     	;# 
   744  0E24                     	;# 
   745  0E25                     	;# 
   746  0E28                     	;# 
   747  0E29                     	;# 
   748  0E2A                     	;# 
   749  0E2B                     	;# 
   750  0E90                     	;# 
   751  0E91                     	;# 
   752  0E92                     	;# 
   753  0E94                     	;# 
   754  0E95                     	;# 
   755  0F0F                     	;# 
   756  0F10                     	;# 
   757  0F11                     	;# 
   758  0F12                     	;# 
   759  0F13                     	;# 
   760  0F14                     	;# 
   761  0F15                     	;# 
   762  0F16                     	;# 
   763  0F17                     	;# 
   764  0F18                     	;# 
   765  0F19                     	;# 
   766  0F1A                     	;# 
   767  0F1B                     	;# 
   768  0F1C                     	;# 
   769  0F1D                     	;# 
   770  0F1E                     	;# 
   771  0F1F                     	;# 
   772  0F20                     	;# 
   773  0F21                     	;# 
   774  0F22                     	;# 
   775  0F23                     	;# 
   776  0FE4                     	;# 
   777  0FE5                     	;# 
   778  0FE6                     	;# 
   779  0FE7                     	;# 
   780  0FE8                     	;# 
   781  0FE9                     	;# 
   782  0FEA                     	;# 
   783  0FEB                     	;# 
   784  0FED                     	;# 
   785  0FEE                     	;# 
   786  0FEF                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  0010                     	;# 
   801  0011                     	;# 
   802  0012                     	;# 
   803  0013                     	;# 
   804  0014                     	;# 
   805  0015                     	;# 
   806  0015                     	;# 
   807  0016                     	;# 
   808  0016                     	;# 
   809  0017                     	;# 
   810  0018                     	;# 
   811  0019                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  001D                     	;# 
   817  001E                     	;# 
   818  001F                     	;# 
   819  008C                     	;# 
   820  0090                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0093                     	;# 
   824  0094                     	;# 
   825  0097                     	;# 
   826  009B                     	;# 
   827  009B                     	;# 
   828  009C                     	;# 
   829  009D                     	;# 
   830  009E                     	;# 
   831  009F                     	;# 
   832  010C                     	;# 
   833  0111                     	;# 
   834  0112                     	;# 
   835  0115                     	;# 
   836  0116                     	;# 
   837  0117                     	;# 
   838  0118                     	;# 
   839  0119                     	;# 
   840  018C                     	;# 
   841  0197                     	;# 
   842  0199                     	;# 
   843  0199                     	;# 
   844  0199                     	;# 
   845  019A                     	;# 
   846  019A                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019C                     	;# 
   854  019C                     	;# 
   855  019C                     	;# 
   856  019D                     	;# 
   857  019D                     	;# 
   858  019D                     	;# 
   859  019E                     	;# 
   860  019E                     	;# 
   861  019E                     	;# 
   862  019F                     	;# 
   863  019F                     	;# 
   864  019F                     	;# 
   865  019F                     	;# 
   866  019F                     	;# 
   867  020C                     	;# 
   868  0211                     	;# 
   869  0211                     	;# 
   870  0212                     	;# 
   871  0212                     	;# 
   872  0213                     	;# 
   873  0213                     	;# 
   874  0214                     	;# 
   875  0214                     	;# 
   876  0215                     	;# 
   877  0215                     	;# 
   878  0215                     	;# 
   879  0215                     	;# 
   880  0216                     	;# 
   881  0216                     	;# 
   882  0217                     	;# 
   883  0217                     	;# 
   884  028C                     	;# 
   885  0291                     	;# 
   886  0291                     	;# 
   887  0292                     	;# 
   888  0293                     	;# 
   889  0294                     	;# 
   890  0295                     	;# 
   891  0295                     	;# 
   892  0296                     	;# 
   893  0297                     	;# 
   894  0298                     	;# 
   895  030C                     	;# 
   896  038C                     	;# 
   897  0391                     	;# 
   898  0392                     	;# 
   899  0393                     	;# 
   900  039A                     	;# 
   901  039C                     	;# 
   902  039D                     	;# 
   903  039E                     	;# 
   904  039F                     	;# 
   905  0498                     	;# 
   906  0498                     	;# 
   907  0499                     	;# 
   908  049A                     	;# 
   909  049B                     	;# 
   910  049B                     	;# 
   911  049C                     	;# 
   912  049D                     	;# 
   913  049E                     	;# 
   914  049F                     	;# 
   915  0617                     	;# 
   916  0618                     	;# 
   917  0619                     	;# 
   918  0619                     	;# 
   919  061A                     	;# 
   920  061B                     	;# 
   921  061C                     	;# 
   922  061C                     	;# 
   923  0691                     	;# 
   924  0692                     	;# 
   925  0693                     	;# 
   926  0694                     	;# 
   927  0695                     	;# 
   928  0696                     	;# 
   929  0697                     	;# 
   930  0698                     	;# 
   931  0699                     	;# 
   932  0891                     	;# 
   933  0891                     	;# 
   934  0891                     	;# 
   935  0891                     	;# 
   936  0891                     	;# 
   937  0891                     	;# 
   938  0892                     	;# 
   939  0892                     	;# 
   940  0892                     	;# 
   941  0893                     	;# 
   942  0893                     	;# 
   943  0893                     	;# 
   944  0893                     	;# 
   945  0893                     	;# 
   946  0893                     	;# 
   947  0894                     	;# 
   948  0894                     	;# 
   949  0894                     	;# 
   950  0895                     	;# 
   951  0895                     	;# 
   952  0895                     	;# 
   953  0896                     	;# 
   954  0896                     	;# 
   955  0896                     	;# 
   956  089B                     	;# 
   957  0911                     	;# 
   958  0912                     	;# 
   959  0913                     	;# 
   960  0914                     	;# 
   961  0915                     	;# 
   962  0916                     	;# 
   963  0918                     	;# 
   964  0919                     	;# 
   965  091A                     	;# 
   966  091B                     	;# 
   967  091C                     	;# 
   968  091D                     	;# 
   969  091E                     	;# 
   970  091F                     	;# 
   971  0E0F                     	;# 
   972  0E10                     	;# 
   973  0E11                     	;# 
   974  0E12                     	;# 
   975  0E13                     	;# 
   976  0E14                     	;# 
   977  0E15                     	;# 
   978  0E18                     	;# 
   979  0E1A                     	;# 
   980  0E1B                     	;# 
   981  0E1C                     	;# 
   982  0E20                     	;# 
   983  0E21                     	;# 
   984  0E22                     	;# 
   985  0E24                     	;# 
   986  0E25                     	;# 
   987  0E28                     	;# 
   988  0E29                     	;# 
   989  0E2A                     	;# 
   990  0E2B                     	;# 
   991  0E90                     	;# 
   992  0E91                     	;# 
   993  0E92                     	;# 
   994  0E94                     	;# 
   995  0E95                     	;# 
   996  0F0F                     	;# 
   997  0F10                     	;# 
   998  0F11                     	;# 
   999  0F12                     	;# 
  1000  0F13                     	;# 
  1001  0F14                     	;# 
  1002  0F15                     	;# 
  1003  0F16                     	;# 
  1004  0F17                     	;# 
  1005  0F18                     	;# 
  1006  0F19                     	;# 
  1007  0F1A                     	;# 
  1008  0F1B                     	;# 
  1009  0F1C                     	;# 
  1010  0F1D                     	;# 
  1011  0F1E                     	;# 
  1012  0F1F                     	;# 
  1013  0F20                     	;# 
  1014  0F21                     	;# 
  1015  0F22                     	;# 
  1016  0F23                     	;# 
  1017  0FE4                     	;# 
  1018  0FE5                     	;# 
  1019  0FE6                     	;# 
  1020  0FE7                     	;# 
  1021  0FE8                     	;# 
  1022  0FE9                     	;# 
  1023  0FEA                     	;# 
  1024  0FEB                     	;# 
  1025  0FED                     	;# 
  1026  0FEE                     	;# 
  1027  0FEF                     	;# 
  1028                           
  1029                           	psect	idataBANK0
  1030  01FD                     __pidataBANK0:	
  1031                           
  1032                           ;initializer for _down_table
  1033  01FD  342D               	retlw	45
  1034  01FE  3400               	retlw	0
  1035  01FF  3433               	retlw	51
  1036  0200  3400               	retlw	0
  1037  0201  3419               	retlw	25
  1038  0202  3400               	retlw	0
  1039  0203  340F               	retlw	15
  1040  0204  3400               	retlw	0
  1041  0205  3405               	retlw	5
  1042  0206  3400               	retlw	0
  1043  0207  3401               	retlw	1
  1044  0208  3400               	retlw	0
  1045                           
  1046                           ;initializer for _Noise_Seed
  1047  0209  3401               	retlw	1
  1048  020A  3400               	retlw	0
  1049  020B  3400               	retlw	0
  1050  020C  3400               	retlw	0
  1051                           
  1052                           ;initializer for _Vo_2_Freq
  1053  020D  3480               	retlw	128
  1054  020E  3401               	retlw	1
  1055                           
  1056                           ;initializer for _Vo_1_Freq
  1057  020F  3400               	retlw	0
  1058  0210  3405               	retlw	5
  1059                           
  1060                           ;initializer for _Train_Speed
  1061  0211  3400               	retlw	0
  1062  0212  3401               	retlw	1
  1063                           
  1064                           ;initializer for _Vo_2_Amp
  1065  0213  34FF               	retlw	255
  1066                           
  1067                           ;initializer for _Vo_1_Amp
  1068  0214  34FF               	retlw	255
  1069                           
  1070                           ;initializer for _App_Tempo
  1071  0215  346C               	retlw	108
  1072                           
  1073                           ;initializer for _MidTick_DivCtr
  1074  0216  3401               	retlw	1
  1075                           
  1076                           	psect	idataBANK1
  1077  0226                     __pidataBANK1:	
  1078                           
  1079                           ;initializer for _up_table
  1080  0226  3402               	retlw	2
  1081  0227  3400               	retlw	0
  1082  0228  3405               	retlw	5
  1083  0229  3400               	retlw	0
  1084  022A  340A               	retlw	10
  1085  022B  3400               	retlw	0
  1086  022C  340F               	retlw	15
  1087  022D  3400               	retlw	0
  1088  022E  3419               	retlw	25
  1089  022F  3400               	retlw	0
  1090  0230  3433               	retlw	51
  1091  0231  3400               	retlw	0
  1092  0232  3425               	retlw	37
  1093  0233  3400               	retlw	0
  1094                           
  1095                           	psect	stringtext
  1096  0269                     __pstringtext:	
  1097  0269                     _Vol_margin:	
  1098  0269  3402               	retlw	2
  1099  026A                     __end_of_Vol_margin:	
  1100  000B                     _INTCON	set	11
  1101  001F                     _T2CON	set	31
  1102  001D                     _TMR2	set	29
  1103  001E                     _PR2	set	30
  1104  008D                     _RCIF	set	141
  1105  0089                     _TMR2IF	set	137
  1106  009C                     _ADRESH	set	156
  1107  009D                     _ADCON0	set	157
  1108  0091                     _PIE1	set	145
  1109  009E                     _ADCON1	set	158
  1110  008C                     _TRISA	set	140
  1111  010C                     _LATA	set	268
  1112  019D                     _RC1STA	set	413
  1113  019E                     _TX1STA	set	414
  1114  019B                     _SP1BRGL	set	411
  1115  018C                     _ANSELA	set	396
  1116  0291                     _CCPR1	set	657
  1117  0293                     _CCP1CON	set	659
  1118  091F                     _OSCFRQbits	set	2335
  1119  0E24                     _RXPPS	set	3620
  1120  0E95                     _RA5PPS	set	3733
  1121                           
  1122                           ; #config settings
  1123  0000                     
  1124                           	psect	cinit
  1125  003A                     start_initialization:	
  1126  003A                     __initialization:	
  1127                           
  1128                           ; Initialize objects allocated to BANK0
  1129  003A  30FD               	movlw	low __pidataBANK0
  1130  003B  0084               	movwf	4
  1131  003C  3081               	movlw	(high __pidataBANK0)| (0+128)
  1132  003D  0085               	movwf	5
  1133  003E  3040               	movlw	low __pdataBANK0
  1134  003F  0086               	movwf	6
  1135  0040  3000               	movlw	high __pdataBANK0
  1136  0041  0087               	movwf	7
  1137  0042  301A               	movlw	26
  1138  0043  2259               	fcall	init_ram
  1139                           
  1140                           ; Initialize objects allocated to BANK1
  1141  0044  3026               	movlw	low __pidataBANK1
  1142  0045  0084               	movwf	4
  1143  0046  3082               	movlw	(high __pidataBANK1)| (0+128)
  1144  0047  0085               	movwf	5
  1145  0048  30A0               	movlw	low __pdataBANK1
  1146  0049  0086               	movwf	6
  1147  004A  3000               	movlw	high __pdataBANK1
  1148  004B  0087               	movwf	7
  1149  004C  300E               	movlw	14
  1150  004D  2259               	fcall	init_ram
  1151                           
  1152                           ; Clear objects allocated to BANK0
  1153  004E  3020               	movlw	low __pbssBANK0
  1154  004F  0084               	movwf	4
  1155  0050  3000               	movlw	high __pbssBANK0
  1156  0051  0085               	movwf	5
  1157  0052  3020               	movlw	32
  1158  0053  225F               	fcall	clear_ram0
  1159  0054                     end_of_initialization:	
  1160                           ;End of C runtime variable initialization code
  1161                           
  1162  0054                     __end_of__initialization:	
  1163  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1164  0055  0020               	movlb	0
  1165  0056  2A34               	ljmp	_main	;jump to C main() function
  1166                           
  1167                           	psect	bssBANK0
  1168  0020                     __pbssBANK0:	
  1169  0020                     _Vo_WT_1:	
  1170  0020                     	ds	8
  1171  0028                     _Vo_2_Phase:	
  1172  0028                     	ds	2
  1173  002A                     _Vo_1_Phase:	
  1174  002A                     	ds	2
  1175  002C                     _Vo_DC:	
  1176  002C                     	ds	2
  1177  002E                     _Train_Acc:	
  1178  002E                     	ds	2
  1179  0030                     _App_Output:	
  1180  0030                     	ds	2
  1181  0032                     _App_Tempo_Phase:	
  1182  0032                     	ds	2
  1183  0034                     _LED_Ctr:	
  1184  0034                     	ds	2
  1185  0036                     _Vo_2_Width:	
  1186  0036                     	ds	1
  1187  0037                     _Vo_1_Width:	
  1188  0037                     	ds	1
  1189  0038                     _Vo:	
  1190  0038                     	ds	1
  1191  0039                     _updown:	
  1192  0039                     	ds	1
  1193  003A                     _Train_Up:	
  1194  003A                     	ds	1
  1195  003B                     App_Step@phase:	
  1196  003B                     	ds	1
  1197  003C                     _Vol_1_s:	
  1198  003C                     	ds	1
  1199  003D                     _Vol_1:	
  1200  003D                     	ds	1
  1201  003E                     _App_Noise:	
  1202  003E                     	ds	1
  1203  003F                     _MidTick_Task:	
  1204  003F                     	ds	1
  1205                           
  1206                           	psect	dataBANK0
  1207  0040                     __pdataBANK0:	
  1208  0040                     _down_table:	
  1209  0040                     	ds	12
  1210  004C                     _Noise_Seed:	
  1211  004C                     	ds	4
  1212  0050                     _Vo_2_Freq:	
  1213  0050                     	ds	2
  1214  0052                     _Vo_1_Freq:	
  1215  0052                     	ds	2
  1216  0054                     _Train_Speed:	
  1217  0054                     	ds	2
  1218  0056                     _Vo_2_Amp:	
  1219  0056                     	ds	1
  1220  0057                     _Vo_1_Amp:	
  1221  0057                     	ds	1
  1222  0058                     _App_Tempo:	
  1223  0058                     	ds	1
  1224  0059                     _MidTick_DivCtr:	
  1225  0059                     	ds	1
  1226                           
  1227                           	psect	dataBANK1
  1228  00A0                     __pdataBANK1:	
  1229  00A0                     _up_table:	
  1230  00A0                     	ds	14
  1231                           
  1232                           	psect	inittext
  1233  0259                     init_ram:	
  1234  0259  00FE               	movwf	126
  1235  025A                     initloop:	
  1236  025A  0012               	moviw fsr0++
  1237  025B  001E               	movwi fsr1++
  1238  025C  0BFE               	decfsz	126,f
  1239  025D  2A5A               	goto	initloop
  1240  025E  3400               	retlw	0
  1241                           
  1242                           	psect	clrtext
  1243  025F                     clear_ram0:	
  1244                           ;	Called with FSR0 containing the base address, and
  1245                           ;	WREG with the size to clear
  1246                           
  1247  025F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1248  0260                     clrloop0:	
  1249  0260  0180               	clrf	0	;clear RAM location pointed to by FSR
  1250  0261  3101               	addfsr 0,1
  1251  0262  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1252  0263  2A60               	goto	clrloop0	;have we reached the end yet?
  1253  0264  3400               	retlw	0	;all done for this memory range, return
  1254                           
  1255                           	psect	cstackCOMMON
  1256  0070                     __pcstackCOMMON:	
  1257  0070                     ?_App_Init:	
  1258  0070                     ?_Chip_Init:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_MidTick_Step:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_App_Step:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_Noise_Step:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_ADC_Go:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_Train_Step:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_main:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_ISR:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?i1_Train_Set_Acc:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_Voix_int_Step:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     i1Train_Set_Acc@acc:	
  1289                           ; 2 bytes @ 0x0
  1290                           
  1291                           
  1292                           ; 2 bytes @ 0x0
  1293  0070                     	ds	2
  1294  0072                     ??_Voix_int_Step:	
  1295  0072                     i1Train_Set_Acc@up:	
  1296                           ; 1 bytes @ 0x2
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x2
  1300  0072                     	ds	1
  1301  0073                     ??i1_Train_Set_Acc:	
  1302                           
  1303                           ; 1 bytes @ 0x3
  1304  0073                     	ds	3
  1305  0076                     _Voix_int_Step$164:	
  1306                           
  1307                           ; 2 bytes @ 0x6
  1308  0076                     	ds	2
  1309  0078                     _Voix_int_Step$165:	
  1310                           
  1311                           ; 2 bytes @ 0x8
  1312  0078                     	ds	2
  1313  007A                     Voix_int_Step@acc:	
  1314                           
  1315                           ; 2 bytes @ 0xA
  1316  007A                     	ds	2
  1317  007C                     ??_ISR:	
  1318                           
  1319                           ; 1 bytes @ 0xC
  1320  007C                     	ds	2
  1321                           
  1322                           	psect	cstackBANK0
  1323  005A                     __pcstackBANK0:	
  1324  005A                     ??_Chip_Init:	
  1325  005A                     ?_Voix_Set_Speed:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  005A                     ?_Train_Set_Acc:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  005A                     ??_Noise_Step:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  005A                     ??_ADC_Go:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  005A                     Train_Set_Acc@acc:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  005A                     Voix_Set_Speed@speed:	
  1341                           ; 2 bytes @ 0x0
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x0
  1345  005A                     	ds	1
  1346  005B                     Noise_Step@bits:	
  1347                           
  1348                           ; 1 bytes @ 0x1
  1349  005B                     	ds	1
  1350  005C                     ??_Voix_Set_Speed:	
  1351  005C                     Train_Set_Acc@up:	
  1352                           ; 1 bytes @ 0x2
  1353                           
  1354  005C                     Noise_Step@a:	
  1355                           ; 1 bytes @ 0x2
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x2
  1359  005C                     	ds	1
  1360  005D                     ??_Train_Set_Acc:	
  1361  005D                     Noise_Step@b:	
  1362                           ; 1 bytes @ 0x3
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x3
  1366  005D                     	ds	3
  1367  0060                     Voix_Set_Speed@bias:	
  1368                           
  1369                           ; 2 bytes @ 0x6
  1370  0060                     	ds	2
  1371  0062                     Voix_Set_Speed@power:	
  1372                           
  1373                           ; 2 bytes @ 0x8
  1374  0062                     	ds	2
  1375  0064                     ??_App_Init:	
  1376  0064                     ??_Train_Step:	
  1377                           ; 1 bytes @ 0xA
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0xA
  1381  0064                     	ds	4
  1382  0068                     Train_Step@s:	
  1383                           
  1384                           ; 2 bytes @ 0xE
  1385  0068                     	ds	2
  1386  006A                     ??_App_Step:	
  1387                           
  1388                           ; 1 bytes @ 0x10
  1389  006A                     	ds	2
  1390  006C                     ??_MidTick_Step:	
  1391  006C                     ??_main:	
  1392                           ; 1 bytes @ 0x12
  1393                           
  1394                           
  1395                           	psect	maintext
  1396  0234                     __pmaintext:	
  1397                           ; 1 bytes @ 0x12
  1398 ;;
  1399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1400 ;;
  1401 ;; *************** function _main *****************
  1402 ;; Defined at:
  1403 ;;		line 13 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : B1F/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1417 ;;      Params:         0       0       0       0
  1418 ;;      Locals:         0       0       0       0
  1419 ;;      Temps:          0       0       0       0
  1420 ;;      Totals:         0       0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels required when called:    6
  1423 ;; This function calls:
  1424 ;;		_App_Init
  1425 ;;		_Chip_Init
  1426 ;;		_MidTick_Step
  1427 ;; This function is called by:
  1428 ;;		Startup code after reset
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _main
  1434  0234                     _main:	
  1435                           
  1436                           ;Main.c: 15: App_Init();
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1440  0234  2217               	fcall	_App_Init
  1441                           
  1442                           ;Main.c: 16: Chip_Init();
  1443  0235  2174               	fcall	_Chip_Init
  1444  0236                     l1032:	
  1445                           ;Main.c: 19: while( 1 )
  1446                           
  1447                           
  1448                           ;Main.c: 20: {
  1449                           ;Main.c: 21: if( MidTick_Task )
  1450  0236  0020               	movlb	0	; select bank0
  1451  0237  083F               	movf	_MidTick_Task,w
  1452  0238  1903               	btfsc	3,2
  1453  0239  2A36               	goto	l1032
  1454                           
  1455                           ;Main.c: 22: {
  1456                           ;Main.c: 23: MidTick_Task --;
  1457  023A  3001               	movlw	1
  1458  023B  02BF               	subwf	_MidTick_Task,f
  1459                           
  1460                           ;Main.c: 24: MidTick_Step();
  1461  023C  2252               	fcall	_MidTick_Step
  1462  023D  2A36               	goto	l1032
  1463  023E                     __end_of_main:	
  1464                           
  1465                           	psect	text1
  1466  0252                     __ptext1:	
  1467 ;; *************** function _MidTick_Step *****************
  1468 ;; Defined at:
  1469 ;;		line 31 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1483 ;;      Params:         0       0       0       0
  1484 ;;      Locals:         0       0       0       0
  1485 ;;      Temps:          0       0       0       0
  1486 ;;      Totals:         0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    5
  1490 ;; This function calls:
  1491 ;;		_App_Step
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _MidTick_Step
  1499  0252                     _MidTick_Step:	
  1500                           
  1501                           ;Main.c: 33: LED_Ctr += 33;
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _MidTick_Step: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1505  0252  3021               	movlw	33
  1506  0253  0020               	movlb	0	; select bank0
  1507  0254  07B4               	addwf	_LED_Ctr,f
  1508  0255  3000               	movlw	0
  1509  0256  3DB5               	addwfc	_LED_Ctr+1,f
  1510                           
  1511                           ;Main.c: 36: App_Step();
  1512  0257  21A3               	fcall	_App_Step
  1513  0258  0008               	return
  1514  0259                     __end_of_MidTick_Step:	
  1515                           
  1516                           	psect	text2
  1517  01A3                     __ptext2:	
  1518 ;; *************** function _App_Step *****************
  1519 ;; Defined at:
  1520 ;;		line 27 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  vol             1    0        unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1534 ;;      Params:         0       0       0       0
  1535 ;;      Locals:         0       0       0       0
  1536 ;;      Temps:          0       2       0       0
  1537 ;;      Totals:         0       2       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    4
  1541 ;; This function calls:
  1542 ;;		_ADC_Go
  1543 ;;		_Noise_Step
  1544 ;;		_Train_Step
  1545 ;; This function is called by:
  1546 ;;		_MidTick_Step
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _App_Step
  1552  01A3                     _App_Step:	
  1553                           
  1554                           ;App.c: 29: static uint8 phase = 0;
  1555                           ;App.c: 31: App_Noise = Noise_Step( 4 ) & 0xFF;
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _App_Step: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1559  01A3  3004               	movlw	4
  1560  01A4  21D0               	fcall	_Noise_Step
  1561  01A5  0020               	movlb	0	; select bank0
  1562  01A6  00EA               	movwf	??_App_Step
  1563  01A7  086A               	movf	??_App_Step,w
  1564  01A8  00BE               	movwf	_App_Noise
  1565                           
  1566                           ;App.c: 32: App_Tempo_Phase += App_Tempo;
  1567  01A9  0858               	movf	_App_Tempo,w
  1568  01AA  00EA               	movwf	??_App_Step
  1569  01AB  01EB               	clrf	??_App_Step+1
  1570  01AC  086A               	movf	??_App_Step,w
  1571  01AD  07B2               	addwf	_App_Tempo_Phase,f
  1572  01AE  086B               	movf	??_App_Step+1,w
  1573  01AF  3DB3               	addwfc	_App_Tempo_Phase+1,f
  1574                           
  1575                           ;App.c: 34: if( App_Tempo_Phase >= 2500 )
  1576  01B0  3009               	movlw	9
  1577  01B1  0233               	subwf	_App_Tempo_Phase+1,w
  1578  01B2  30C4               	movlw	196
  1579  01B3  1903               	skipnz
  1580  01B4  0232               	subwf	_App_Tempo_Phase,w
  1581  01B5  1C03               	skipc
  1582  01B6  29C3               	goto	l964
  1583                           
  1584                           ;App.c: 35: {
  1585                           ;App.c: 36: App_Tempo_Phase -= 2500;
  1586  01B7  30C4               	movlw	196
  1587  01B8  02B2               	subwf	_App_Tempo_Phase,f
  1588  01B9  3009               	movlw	9
  1589  01BA  3BB3               	subwfb	_App_Tempo_Phase+1,f
  1590                           
  1591                           ;App.c: 37: }
  1592                           ;App.c: 39: uint8 vol;
  1593                           ;App.c: 40: switch( phase ++ )
  1594  01BB  29C3               	goto	l964
  1595  01BC                     l956:	
  1596                           ;App.c: 41: {
  1597                           ;App.c: 42: case 0:
  1598                           
  1599                           
  1600                           ;App.c: 43: ADC_Go();
  1601  01BC  2265               	fcall	_ADC_Go
  1602                           
  1603                           ;App.c: 44: break;
  1604  01BD  0008               	return
  1605  01BE                     l958:	
  1606                           ;App.c: 46: case 1:
  1607                           
  1608                           
  1609                           ;App.c: 47: Train_Step();
  1610  01BE  2138               	fcall	_Train_Step
  1611                           
  1612                           ;App.c: 48: break;
  1613  01BF  0008               	return
  1614  01C0                     l960:	
  1615                           ;App.c: 50: case 19:
  1616                           
  1617                           
  1618                           ;App.c: 51: phase = 0;
  1619  01C0  0020               	movlb	0	; select bank0
  1620  01C1  01BB               	clrf	App_Step@phase
  1621                           
  1622                           ;App.c: 53: }
  1623                           
  1624                           ;App.c: 52: break;
  1625  01C2  0008               	return
  1626  01C3                     l964:	
  1627  01C3  083B               	movf	App_Step@phase,w
  1628  01C4  0ABB               	incf	App_Step@phase,f
  1629                           
  1630                           ; Switch size 1, requested type "space"
  1631                           ; Number of cases is 3, Range of values is 0 to 19
  1632                           ; switch strategies available:
  1633                           ; Name         Instructions Cycles
  1634                           ; simple_byte           10     6 (average)
  1635                           ; direct_byte           46     6 (fixed)
  1636                           ; jumptable            260     6 (fixed)
  1637                           ;	Chosen strategy is simple_byte
  1638  01C5  3A00               	xorlw	0	; case 0
  1639  01C6  1903               	skipnz
  1640  01C7  29BC               	goto	l956
  1641  01C8  3A01               	xorlw	1	; case 1
  1642  01C9  1903               	skipnz
  1643  01CA  29BE               	goto	l958
  1644  01CB  3A12               	xorlw	18	; case 19
  1645  01CC  1903               	skipnz
  1646  01CD  29C0               	goto	l960
  1647  01CE  29CF               	goto	l62
  1648  01CF                     l62:	
  1649  01CF  0008               	return
  1650  01D0                     __end_of_App_Step:	
  1651                           
  1652                           	psect	text3
  1653  0138                     __ptext3:	
  1654 ;; *************** function _Train_Step *****************
  1655 ;; Defined at:
  1656 ;;		line 109 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  s               2   14[BANK0 ] unsigned short 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         0       2       0       0
  1672 ;;      Temps:          0       4       0       0
  1673 ;;      Totals:         0       6       0       0
  1674 ;;Total ram usage:        6 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    3
  1677 ;; This function calls:
  1678 ;;		_Voix_Set_Speed
  1679 ;; This function is called by:
  1680 ;;		_App_Step
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _Train_Step
  1686  0138                     _Train_Step:	
  1687                           
  1688                           ;App.c: 111: uint16 s = Train_Speed;
  1689                           
  1690                           ;incstack = 0
  1691                           ; Regs used in _Train_Step: [wreg+status,2+status,0+pclath+cstack]
  1692  0138  0020               	movlb	0	; select bank0
  1693  0139  0855               	movf	_Train_Speed+1,w
  1694  013A  00E9               	movwf	Train_Step@s+1
  1695  013B  0854               	movf	_Train_Speed,w
  1696  013C  00E8               	movwf	Train_Step@s
  1697                           
  1698                           ;App.c: 113: if( Train_Up )
  1699  013D  083A               	movf	_Train_Up,w
  1700  013E  1903               	btfsc	3,2
  1701  013F  295F               	goto	l940
  1702                           
  1703                           ;App.c: 114: {
  1704                           ;App.c: 115: if( Train_Speed < ( 0xFFFF - Train_Acc ) ) Train_Speed += Train_Acc;
  1705  0140  092E               	comf	_Train_Acc,w
  1706  0141  00E4               	movwf	??_Train_Step
  1707  0142  092F               	comf	_Train_Acc+1,w
  1708  0143  00E5               	movwf	??_Train_Step+1
  1709  0144  0AE4               	incf	??_Train_Step,f
  1710  0145  1903               	skipnz
  1711  0146  0AE5               	incf	??_Train_Step+1,f
  1712  0147  0864               	movf	??_Train_Step,w
  1713  0148  3EFF               	addlw	255
  1714  0149  00E6               	movwf	??_Train_Step+2
  1715  014A  30FF               	movlw	255
  1716  014B  3D65               	addwfc	??_Train_Step+1,w
  1717  014C  00E7               	movwf	??_Train_Step+3
  1718  014D  0867               	movf	??_Train_Step+3,w
  1719  014E  0255               	subwf	_Train_Speed+1,w
  1720  014F  1D03               	skipz
  1721  0150  2953               	goto	u625
  1722  0151  0866               	movf	??_Train_Step+2,w
  1723  0152  0254               	subwf	_Train_Speed,w
  1724  0153                     u625:	
  1725  0153  1803               	skipnc
  1726  0154  295A               	goto	l938
  1727  0155  082E               	movf	_Train_Acc,w
  1728  0156  07D4               	addwf	_Train_Speed,f
  1729  0157  082F               	movf	_Train_Acc+1,w
  1730  0158  3DD5               	addwfc	_Train_Speed+1,f
  1731  0159  296E               	goto	l946
  1732  015A                     l938:	
  1733                           
  1734                           ;App.c: 116: else Train_Speed = 0xFFFF;
  1735  015A  30FF               	movlw	255
  1736  015B  00D4               	movwf	_Train_Speed
  1737  015C  30FF               	movlw	255
  1738  015D  00D5               	movwf	_Train_Speed+1
  1739                           
  1740                           ;App.c: 117: }
  1741  015E  296E               	goto	l946
  1742  015F                     l940:	
  1743                           
  1744                           ;App.c: 118: else
  1745                           ;App.c: 119: {
  1746                           ;App.c: 120: if( Train_Speed > Train_Acc ) Train_Speed -= Train_Acc;
  1747  015F  0855               	movf	_Train_Speed+1,w
  1748  0160  022F               	subwf	_Train_Acc+1,w
  1749  0161  1D03               	skipz
  1750  0162  2965               	goto	u635
  1751  0163  0854               	movf	_Train_Speed,w
  1752  0164  022E               	subwf	_Train_Acc,w
  1753  0165                     u635:	
  1754  0165  1803               	skipnc
  1755  0166  296C               	goto	l944
  1756  0167  082E               	movf	_Train_Acc,w
  1757  0168  02D4               	subwf	_Train_Speed,f
  1758  0169  082F               	movf	_Train_Acc+1,w
  1759  016A  3BD5               	subwfb	_Train_Speed+1,f
  1760  016B  296E               	goto	l946
  1761  016C                     l944:	
  1762                           
  1763                           ;App.c: 121: else Train_Speed = 0;
  1764  016C  01D4               	clrf	_Train_Speed
  1765  016D  01D5               	clrf	_Train_Speed+1
  1766  016E                     l946:	
  1767                           
  1768                           ;App.c: 122: }
  1769                           ;App.c: 124: Voix_Set_Speed( Train_Speed );
  1770  016E  0855               	movf	_Train_Speed+1,w
  1771  016F  00DB               	movwf	Voix_Set_Speed@speed+1
  1772  0170  0854               	movf	_Train_Speed,w
  1773  0171  00DA               	movwf	Voix_Set_Speed@speed
  1774  0172  2057               	fcall	_Voix_Set_Speed
  1775  0173  0008               	return
  1776  0174                     __end_of_Train_Step:	
  1777                           
  1778                           	psect	text4
  1779  01D0                     __ptext4:	
  1780 ;; *************** function _Noise_Step *****************
  1781 ;; Defined at:
  1782 ;;		line 6 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  bits            1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  bits            1    1[BANK0 ] unsigned char 
  1787 ;;  b               1    3[BANK0 ] unsigned char 
  1788 ;;  a               1    2[BANK0 ] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1798 ;;      Params:         0       0       0       0
  1799 ;;      Locals:         0       3       0       0
  1800 ;;      Temps:          0       1       0       0
  1801 ;;      Totals:         0       4       0       0
  1802 ;;Total ram usage:        4 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    2
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_App_Step
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _Noise_Step
  1814  01D0                     _Noise_Step:	
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _Noise_Step: [wreg+status,2+status,0]
  1818                           ;Noise_Step@bits stored from wreg
  1819  01D0  0020               	movlb	0	; select bank0
  1820  01D1  00DB               	movwf	Noise_Step@bits
  1821  01D2                     l922:	
  1822                           ;Voix.c: 8: while( -- bits )
  1823                           
  1824  01D2  3001               	movlw	1
  1825  01D3  02DB               	subwf	Noise_Step@bits,f
  1826  01D4  1903               	btfsc	3,2
  1827  01D5  29FB               	goto	l924
  1828                           
  1829                           ;Voix.c: 9: {
  1830                           ;Voix.c: 10: Noise_Seed <<= 1;
  1831  01D6  3001               	movlw	1
  1832  01D7                     u515:	
  1833  01D7  35CC               	lslf	_Noise_Seed,f
  1834  01D8  0DCD               	rlf	_Noise_Seed+1,f
  1835  01D9  0DCE               	rlf	_Noise_Seed+2,f
  1836  01DA  0DCF               	rlf	_Noise_Seed+3,f
  1837  01DB  0B89               	decfsz	9,f
  1838  01DC  29D7               	goto	u515
  1839                           
  1840                           ;Voix.c: 11: bool a = ( Noise_Seed & 0x100000 ) > 0;
  1841  01DD  1E4E               	btfss	_Noise_Seed+2,4
  1842  01DE  29E1               	goto	u520
  1843  01DF  3001               	movlw	1
  1844  01E0  29E2               	goto	u530
  1845  01E1                     u520:	
  1846  01E1  3000               	movlw	0
  1847  01E2                     u530:	
  1848  01E2  00DA               	movwf	??_Noise_Step
  1849  01E3  085A               	movf	??_Noise_Step,w
  1850  01E4  00DC               	movwf	Noise_Step@a
  1851                           
  1852                           ;Voix.c: 12: bool b = ( Noise_Seed & 0x400000 ) > 0;
  1853  01E5  1F4E               	btfss	_Noise_Seed+2,6
  1854  01E6  29E9               	goto	u540
  1855  01E7  3001               	movlw	1
  1856  01E8  29EA               	goto	u550
  1857  01E9                     u540:	
  1858  01E9  3000               	movlw	0
  1859  01EA                     u550:	
  1860  01EA  00DA               	movwf	??_Noise_Step
  1861  01EB  085A               	movf	??_Noise_Step,w
  1862  01EC  00DD               	movwf	Noise_Step@b
  1863                           
  1864                           ;Voix.c: 14: if( ( !a && b ) || ( a && !b ) ) Noise_Seed |= 1;
  1865  01ED  085C               	movf	Noise_Step@a,w
  1866  01EE  1D03               	btfss	3,2
  1867  01EF  29F3               	goto	l918
  1868  01F0  085D               	movf	Noise_Step@b,w
  1869  01F1  1D03               	btfss	3,2
  1870  01F2  29F9               	goto	l169
  1871  01F3                     l918:	
  1872  01F3  085C               	movf	Noise_Step@a,w
  1873  01F4  1903               	btfsc	3,2
  1874  01F5  29D2               	goto	l922
  1875  01F6  085D               	movf	Noise_Step@b,w
  1876  01F7  1D03               	btfss	3,2
  1877  01F8  29D2               	goto	l922
  1878  01F9                     l169:	
  1879  01F9  144C               	bsf	_Noise_Seed,0
  1880  01FA  29D2               	goto	l922
  1881  01FB                     l924:	
  1882                           
  1883                           ;Voix.c: 15: }
  1884                           ;Voix.c: 17: return Noise_Seed;
  1885  01FB  084C               	movf	_Noise_Seed,w
  1886  01FC  0008               	return
  1887  01FD                     __end_of_Noise_Step:	
  1888                           
  1889                           	psect	text5
  1890  0265                     __ptext5:	
  1891 ;; *************** function _ADC_Go *****************
  1892 ;; Defined at:
  1893 ;;		line 150 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1907 ;;      Params:         0       0       0       0
  1908 ;;      Locals:         0       0       0       0
  1909 ;;      Temps:          0       0       0       0
  1910 ;;      Totals:         0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    2
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_App_Step
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _ADC_Go
  1923  0265                     _ADC_Go:	
  1924                           
  1925                           ;Config.c: 152: ADCON0 =
  1926                           ;Config.c: 153: 1 << 0x0 |
  1927                           ;Config.c: 154: 1 << 0x1 |
  1928                           ;Config.c: 155: 2 << 0x2
  1929                           ;Config.c: 156: ;
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _ADC_Go: [wreg]
  1933  0265  300B               	movlw	11
  1934  0266  0021               	movlb	1	; select bank1
  1935  0267  009D               	movwf	29	;volatile
  1936  0268  0008               	return
  1937  0269                     __end_of_ADC_Go:	
  1938                           
  1939                           	psect	text6
  1940  0174                     __ptext6:	
  1941 ;; *************** function _Chip_Init *****************
  1942 ;; Defined at:
  1943 ;;		line 58 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1957 ;;      Params:         0       0       0       0
  1958 ;;      Locals:         0       0       0       0
  1959 ;;      Temps:          0       0       0       0
  1960 ;;      Totals:         0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    2
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _Chip_Init
  1973  0174                     _Chip_Init:	
  1974                           
  1975                           ;Config.c: 62: OSCFRQbits.HFFRQ = 6;
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in _Chip_Init: [wreg+status,2+status,0]
  1979  0174  0032               	movlb	18	; select bank18
  1980  0175  081F               	movf	31,w	;volatile
  1981  0176  39F0               	andlw	-16
  1982  0177  3806               	iorlw	6
  1983  0178  009F               	movwf	31	;volatile
  1984                           
  1985                           ;Config.c: 66: ANSELA = 0b000000;
  1986  0179  0023               	movlb	3	; select bank3
  1987  017A  018C               	clrf	12	;volatile
  1988                           
  1989                           ;Config.c: 67: TRISA = 0b000111;
  1990  017B  3007               	movlw	7
  1991  017C  0021               	movlb	1	; select bank1
  1992  017D  008C               	movwf	12	;volatile
  1993                           
  1994                           ;Config.c: 68: LATA = 0b000000;
  1995  017E  0022               	movlb	2	; select bank2
  1996  017F  018C               	clrf	12	;volatile
  1997                           
  1998                           ;Config.c: 70: RXPPS = 0x12;
  1999  0180  3012               	movlw	18
  2000  0181  003C               	movlb	28	; select bank28
  2001  0182  00A4               	movwf	36	;volatile
  2002                           
  2003                           ;Config.c: 71: RA5PPS = 0x0C;
  2004  0183  300C               	movlw	12
  2005  0184  003D               	movlb	29	; select bank29
  2006  0185  0095               	movwf	21	;volatile
  2007                           
  2008                           ;Config.c: 75: ADCON1 =
  2009                           ;Config.c: 76: 6 << 0x4
  2010                           ;Config.c: 77: ;
  2011  0186  3060               	movlw	96
  2012  0187  0021               	movlb	1	; select bank1
  2013  0188  009E               	movwf	30	;volatile
  2014                           
  2015                           ;Config.c: 81: PR2 = 250 - 1;
  2016  0189  30F9               	movlw	249
  2017  018A  0020               	movlb	0	; select bank0
  2018  018B  009E               	movwf	30	;volatile
  2019                           
  2020                           ;Config.c: 82: TMR2 = 0;
  2021  018C  019D               	clrf	29	;volatile
  2022                           
  2023                           ;Config.c: 83: T2CON =
  2024                           ;Config.c: 84: 0 << 0x0 |
  2025                           ;Config.c: 85: 0 << 0x3 |
  2026                           ;Config.c: 86: 1 << 0x2
  2027                           ;Config.c: 87: ;
  2028  018D  3004               	movlw	4
  2029  018E  009F               	movwf	31	;volatile
  2030                           
  2031                           ;Config.c: 89: CCPR1 = 0x100;
  2032  018F  3001               	movlw	1
  2033  0190  0025               	movlb	5	; select bank5
  2034  0191  0092               	movwf	18	;volatile
  2035  0192  3000               	movlw	0
  2036  0193  0091               	movwf	17	;volatile
  2037                           
  2038                           ;Config.c: 91: CCP1CON =
  2039                           ;Config.c: 92: 1 << 0x7 |
  2040                           ;Config.c: 93: 0x0F << 0x0
  2041                           ;Config.c: 94: ;
  2042  0194  308F               	movlw	143
  2043  0195  0093               	movwf	19	;volatile
  2044                           
  2045                           ;Config.c: 98: SP1BRGL = 4;
  2046  0196  3004               	movlw	4
  2047  0197  0023               	movlb	3	; select bank3
  2048  0198  009B               	movwf	27	;volatile
  2049                           
  2050                           ;Config.c: 100: TX1STA =
  2051                           ;Config.c: 101: 1 << 0x2
  2052                           ;Config.c: 102: ;
  2053  0199  3004               	movlw	4
  2054  019A  009E               	movwf	30	;volatile
  2055                           
  2056                           ;Config.c: 104: RC1STA =
  2057                           ;Config.c: 105: 1 << 0x7 |
  2058                           ;Config.c: 106: 1 << 0x4
  2059                           ;Config.c: 107: ;
  2060  019B  3090               	movlw	144
  2061  019C  009D               	movwf	29	;volatile
  2062                           
  2063                           ;Config.c: 111: PIE1 =
  2064                           ;Config.c: 112: 1 << 0x1
  2065                           ;Config.c: 113: ;
  2066  019D  3002               	movlw	2
  2067  019E  0021               	movlb	1	; select bank1
  2068  019F  0091               	movwf	17	;volatile
  2069                           
  2070                           ;Config.c: 114: INTCON =
  2071                           ;Config.c: 115: 1 << 0x6 |
  2072                           ;Config.c: 116: 1 << 0x7
  2073                           ;Config.c: 117: ;
  2074  01A0  30C0               	movlw	192
  2075  01A1  008B               	movwf	11	;volatile
  2076  01A2  0008               	return
  2077  01A3                     __end_of_Chip_Init:	
  2078                           
  2079                           	psect	text7
  2080  0217                     __ptext7:	
  2081 ;; *************** function _App_Init *****************
  2082 ;; Defined at:
  2083 ;;		line 21 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2097 ;;      Params:         0       0       0       0
  2098 ;;      Locals:         0       0       0       0
  2099 ;;      Temps:          0       0       0       0
  2100 ;;      Totals:         0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		_Train_Set_Acc
  2106 ;;		_Voix_Set_Speed
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _App_Init
  2114  0217                     _App_Init:	
  2115                           
  2116                           ;App.c: 23: Voix_Set_Speed( 100 * 256 );
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
  2120  0217  3000               	movlw	0
  2121  0218  0020               	movlb	0	; select bank0
  2122  0219  00DA               	movwf	Voix_Set_Speed@speed
  2123  021A  3064               	movlw	100
  2124  021B  00DB               	movwf	Voix_Set_Speed@speed+1
  2125  021C  2057               	fcall	_Voix_Set_Speed
  2126                           
  2127                           ;App.c: 24: Train_Set_Acc( 0x0010, 1 );
  2128  021D  3010               	movlw	16
  2129  021E  0020               	movlb	0	; select bank0
  2130  021F  00DA               	movwf	Train_Set_Acc@acc
  2131  0220  3000               	movlw	0
  2132  0221  00DB               	movwf	Train_Set_Acc@acc+1
  2133  0222  01DC               	clrf	Train_Set_Acc@up
  2134  0223  0ADC               	incf	Train_Set_Acc@up,f
  2135  0224  223E               	fcall	_Train_Set_Acc
  2136  0225  0008               	return
  2137  0226                     __end_of_App_Init:	
  2138                           
  2139                           	psect	text8
  2140  0057                     __ptext8:	
  2141 ;; *************** function _Voix_Set_Speed *****************
  2142 ;; Defined at:
  2143 ;;		line 45 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  speed           2    0[BANK0 ] unsigned short 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  power           2    8[BANK0 ] unsigned short 
  2148 ;;  bias            2    6[BANK0 ] unsigned short 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2158 ;;      Params:         0       2       0       0
  2159 ;;      Locals:         0       4       0       0
  2160 ;;      Temps:          0       4       0       0
  2161 ;;      Totals:         0      10       0       0
  2162 ;;Total ram usage:       10 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_App_Init
  2169 ;;		_Train_Step
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _Voix_Set_Speed
  2175  0057                     _Voix_Set_Speed:	
  2176                           
  2177                           ;Voix.c: 47: Vo.Run = speed > 0;
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _Voix_Set_Speed: [wreg+status,2+status,0]
  2181  0057  0020               	movlb	0	; select bank0
  2182  0058  085A               	movf	Voix_Set_Speed@speed,w
  2183  0059  045B               	iorwf	Voix_Set_Speed@speed+1,w
  2184  005A  1903               	btfsc	3,2
  2185  005B  285F               	goto	u400
  2186  005C  0020               	movlb	0	; select bank0
  2187  005D  1438               	bsf	_Vo,0
  2188  005E  2861               	goto	l882
  2189  005F                     u400:	
  2190  005F  0020               	movlb	0	; select bank0
  2191  0060  1038               	bcf	_Vo,0
  2192  0061                     l882:	
  2193                           
  2194                           ;Voix.c: 49: if( Vo.Run )
  2195  0061  1C38               	btfss	_Vo,0
  2196  0062  28DF               	goto	l904
  2197                           
  2198                           ;Voix.c: 50: {
  2199                           ;Voix.c: 51: uint16 bias = 0x200;
  2200  0063  3000               	movlw	0
  2201  0064  00E0               	movwf	Voix_Set_Speed@bias
  2202  0065  3002               	movlw	2
  2203  0066  00E1               	movwf	Voix_Set_Speed@bias+1
  2204                           
  2205                           ;Voix.c: 52: uint16 power = ( speed >> 4 ) + bias;
  2206  0067  085B               	movf	Voix_Set_Speed@speed+1,w
  2207  0068  00DD               	movwf	??_Voix_Set_Speed+1
  2208  0069  085A               	movf	Voix_Set_Speed@speed,w
  2209  006A  00DC               	movwf	??_Voix_Set_Speed
  2210  006B  3004               	movlw	4
  2211  006C                     u435:	
  2212  006C  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2213  006D  0CDC               	rrf	??_Voix_Set_Speed,f
  2214  006E  0B89               	decfsz	9,f
  2215  006F  286C               	goto	u435
  2216  0070  0860               	movf	Voix_Set_Speed@bias,w
  2217  0071  075C               	addwf	??_Voix_Set_Speed,w
  2218  0072  00E2               	movwf	Voix_Set_Speed@power
  2219  0073  0861               	movf	Voix_Set_Speed@bias+1,w
  2220  0074  3D5D               	addwfc	??_Voix_Set_Speed+1,w
  2221  0075  00E3               	movwf	Voix_Set_Speed@power+1
  2222                           
  2223                           ;Voix.c: 54: if( power > 0x0FFF ) power = 0x0FFF;
  2224  0076  3010               	movlw	16
  2225  0077  0263               	subwf	Voix_Set_Speed@power+1,w
  2226  0078  3000               	movlw	0
  2227  0079  1903               	skipnz
  2228  007A  0262               	subwf	Voix_Set_Speed@power,w
  2229  007B  1C03               	skipc
  2230  007C  2881               	goto	l892
  2231  007D  30FF               	movlw	255
  2232  007E  00E2               	movwf	Voix_Set_Speed@power
  2233  007F  300F               	movlw	15
  2234  0080  00E3               	movwf	Voix_Set_Speed@power+1
  2235  0081                     l892:	
  2236                           
  2237                           ;Voix.c: 59: Vo_DC = ( power >> 3 );
  2238  0081  0863               	movf	Voix_Set_Speed@power+1,w
  2239  0082  00DD               	movwf	??_Voix_Set_Speed+1
  2240  0083  0862               	movf	Voix_Set_Speed@power,w
  2241  0084  00DC               	movwf	??_Voix_Set_Speed
  2242  0085  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2243  0086  0CDC               	rrf	??_Voix_Set_Speed,f
  2244  0087  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2245  0088  0CDC               	rrf	??_Voix_Set_Speed,f
  2246  0089  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2247  008A  0CDC               	rrf	??_Voix_Set_Speed,f
  2248  008B  085C               	movf	??_Voix_Set_Speed,w
  2249  008C  00AC               	movwf	_Vo_DC
  2250  008D  085D               	movf	??_Voix_Set_Speed+1,w
  2251  008E  00AD               	movwf	_Vo_DC+1
  2252                           
  2253                           ;Voix.c: 61: Vo_1_Width = ( power >> 4 );
  2254  008F  0863               	movf	Voix_Set_Speed@power+1,w
  2255  0090  00DD               	movwf	??_Voix_Set_Speed+1
  2256  0091  0862               	movf	Voix_Set_Speed@power,w
  2257  0092  00DC               	movwf	??_Voix_Set_Speed
  2258  0093  3004               	movlw	4
  2259  0094                     u455:	
  2260  0094  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2261  0095  0CDC               	rrf	??_Voix_Set_Speed,f
  2262  0096  0B89               	decfsz	9,f
  2263  0097  2894               	goto	u455
  2264  0098  085C               	movf	??_Voix_Set_Speed,w
  2265  0099  00DE               	movwf	??_Voix_Set_Speed+2
  2266  009A  085E               	movf	??_Voix_Set_Speed+2,w
  2267  009B  00B7               	movwf	_Vo_1_Width
  2268                           
  2269                           ;Voix.c: 62: Vo_2_Width = ( power >> 4 );
  2270  009C  0863               	movf	Voix_Set_Speed@power+1,w
  2271  009D  00DD               	movwf	??_Voix_Set_Speed+1
  2272  009E  0862               	movf	Voix_Set_Speed@power,w
  2273  009F  00DC               	movwf	??_Voix_Set_Speed
  2274  00A0  3004               	movlw	4
  2275  00A1                     u465:	
  2276  00A1  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2277  00A2  0CDC               	rrf	??_Voix_Set_Speed,f
  2278  00A3  0B89               	decfsz	9,f
  2279  00A4  28A1               	goto	u465
  2280  00A5  085C               	movf	??_Voix_Set_Speed,w
  2281  00A6  00DE               	movwf	??_Voix_Set_Speed+2
  2282  00A7  085E               	movf	??_Voix_Set_Speed+2,w
  2283  00A8  00B6               	movwf	_Vo_2_Width
  2284                           
  2285                           ;Voix.c: 64: if( speed >= 0x0A00 )
  2286  00A9  300A               	movlw	10
  2287  00AA  025B               	subwf	Voix_Set_Speed@speed+1,w
  2288  00AB  3000               	movlw	0
  2289  00AC  1903               	skipnz
  2290  00AD  025A               	subwf	Voix_Set_Speed@speed,w
  2291  00AE  1C03               	skipc
  2292  00AF  28D6               	goto	l902
  2293                           
  2294                           ;Voix.c: 65: {
  2295                           ;Voix.c: 66: Vo_1_Freq = ( speed >> 6 );
  2296  00B0  085B               	movf	Voix_Set_Speed@speed+1,w
  2297  00B1  00DD               	movwf	??_Voix_Set_Speed+1
  2298  00B2  085A               	movf	Voix_Set_Speed@speed,w
  2299  00B3  00DC               	movwf	??_Voix_Set_Speed
  2300  00B4  3006               	movlw	6
  2301  00B5                     u485:	
  2302  00B5  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2303  00B6  0CDC               	rrf	??_Voix_Set_Speed,f
  2304  00B7  0B89               	decfsz	9,f
  2305  00B8  28B5               	goto	u485
  2306  00B9  085C               	movf	??_Voix_Set_Speed,w
  2307  00BA  00D2               	movwf	_Vo_1_Freq
  2308  00BB  085D               	movf	??_Voix_Set_Speed+1,w
  2309  00BC  00D3               	movwf	_Vo_1_Freq+1
  2310                           
  2311                           ;Voix.c: 67: Vo_2_Freq = ( speed >> 6 ) + ( speed >> 4 );
  2312  00BD  085B               	movf	Voix_Set_Speed@speed+1,w
  2313  00BE  00DD               	movwf	??_Voix_Set_Speed+1
  2314  00BF  085A               	movf	Voix_Set_Speed@speed,w
  2315  00C0  00DC               	movwf	??_Voix_Set_Speed
  2316  00C1  3004               	movlw	4
  2317  00C2                     u495:	
  2318  00C2  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2319  00C3  0CDC               	rrf	??_Voix_Set_Speed,f
  2320  00C4  0B89               	decfsz	9,f
  2321  00C5  28C2               	goto	u495
  2322  00C6  085B               	movf	Voix_Set_Speed@speed+1,w
  2323  00C7  00DF               	movwf	??_Voix_Set_Speed+3
  2324  00C8  085A               	movf	Voix_Set_Speed@speed,w
  2325  00C9  00DE               	movwf	??_Voix_Set_Speed+2
  2326  00CA  3006               	movlw	6
  2327  00CB                     u505:	
  2328  00CB  36DF               	lsrf	??_Voix_Set_Speed+3,f
  2329  00CC  0CDE               	rrf	??_Voix_Set_Speed+2,f
  2330  00CD  0B89               	decfsz	9,f
  2331  00CE  28CB               	goto	u505
  2332  00CF  085C               	movf	??_Voix_Set_Speed,w
  2333  00D0  075E               	addwf	??_Voix_Set_Speed+2,w
  2334  00D1  00D0               	movwf	_Vo_2_Freq
  2335  00D2  085D               	movf	??_Voix_Set_Speed+1,w
  2336  00D3  3D5F               	addwfc	??_Voix_Set_Speed+3,w
  2337  00D4  00D1               	movwf	_Vo_2_Freq+1
  2338                           
  2339                           ;Voix.c: 68: }
  2340  00D5  0008               	return
  2341  00D6                     l902:	
  2342                           
  2343                           ;Voix.c: 69: else
  2344                           ;Voix.c: 70: {
  2345                           ;Voix.c: 71: Vo_1_Freq = ( ( 200 ) * 65536 / 32000 );
  2346  00D6  3099               	movlw	153
  2347  00D7  00D2               	movwf	_Vo_1_Freq
  2348  00D8  3001               	movlw	1
  2349  00D9  00D3               	movwf	_Vo_1_Freq+1
  2350                           
  2351                           ;Voix.c: 72: Vo_2_Freq = ( ( 400 ) * 65536 / 32000 );
  2352  00DA  3033               	movlw	51
  2353  00DB  00D0               	movwf	_Vo_2_Freq
  2354  00DC  3003               	movlw	3
  2355  00DD  00D1               	movwf	_Vo_2_Freq+1
  2356                           
  2357                           ;Voix.c: 73: }
  2358                           ;Voix.c: 74: }
  2359  00DE  0008               	return
  2360  00DF                     l904:	
  2361                           
  2362                           ;Voix.c: 75: else
  2363                           ;Voix.c: 76: {
  2364                           ;Voix.c: 77: Vo_DC = 0x0060;
  2365  00DF  3060               	movlw	96
  2366  00E0  00AC               	movwf	_Vo_DC
  2367  00E1  3000               	movlw	0
  2368  00E2  00AD               	movwf	_Vo_DC+1
  2369  00E3  0008               	return
  2370  00E4                     __end_of_Voix_Set_Speed:	
  2371                           
  2372                           	psect	text9
  2373  023E                     __ptext9:	
  2374 ;; *************** function _Train_Set_Acc *****************
  2375 ;; Defined at:
  2376 ;;		line 103 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  acc             2    0[BANK0 ] unsigned short 
  2379 ;;  up              1    2[BANK0 ] unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2391 ;;      Params:         0       3       0       0
  2392 ;;      Locals:         0       0       0       0
  2393 ;;      Temps:          0       1       0       0
  2394 ;;      Totals:         0       4       0       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    2
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_App_Init
  2402 ;;		_Vol_1_Change
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Train_Set_Acc
  2408  023E                     _Train_Set_Acc:	
  2409                           
  2410                           ;App.c: 105: Train_Acc = acc;
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _Train_Set_Acc: [wreg]
  2414  023E  0020               	movlb	0	; select bank0
  2415  023F  085B               	movf	Train_Set_Acc@acc+1,w
  2416  0240  00AF               	movwf	_Train_Acc+1
  2417  0241  085A               	movf	Train_Set_Acc@acc,w
  2418  0242  00AE               	movwf	_Train_Acc
  2419                           
  2420                           ;App.c: 106: Train_Up = up;
  2421  0243  085C               	movf	Train_Set_Acc@up,w
  2422  0244  00DD               	movwf	??_Train_Set_Acc
  2423  0245  085D               	movf	??_Train_Set_Acc,w
  2424  0246  00BA               	movwf	_Train_Up
  2425  0247  0008               	return
  2426  0248                     __end_of_Train_Set_Acc:	
  2427                           
  2428                           	psect	intentry
  2429  0004                     __pintentry:	
  2430 ;; *************** function _ISR *****************
  2431 ;; Defined at:
  2432 ;;		line 126 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2446 ;;      Params:         0       0       0       0
  2447 ;;      Locals:         0       0       0       0
  2448 ;;      Temps:          2       0       0       0
  2449 ;;      Totals:         2       0       0       0
  2450 ;;Total ram usage:        2 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    1
  2453 ;; This function calls:
  2454 ;;		_Voix_int_Step
  2455 ;;		i1_Train_Set_Acc
  2456 ;; This function is called by:
  2457 ;;		Interrupt level 1
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461  0004                     _ISR:	
  2462                           
  2463                           ;incstack = 0
  2464  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2465                           
  2466                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2467  0005  3180               	pagesel	$
  2468  0006  0020               	movlb	0	; select bank0
  2469  0007  087F               	movf	127,w
  2470  0008  00FD               	movwf	??_ISR+1
  2471                           
  2472                           ;Config.c: 128: if( TMR2IF )
  2473  0009  1C91               	btfss	17,1	;volatile
  2474  000A  281E               	goto	i1l1068
  2475                           
  2476                           ;Config.c: 129: {
  2477                           ;Config.c: 130: TMR2IF = 0;
  2478  000B  1091               	bcf	17,1	;volatile
  2479                           
  2480                           ;Config.c: 132: if( -- MidTick_DivCtr == 0 )
  2481  000C  3001               	movlw	1
  2482  000D  02D9               	subwf	_MidTick_DivCtr,f
  2483  000E  1D03               	btfss	3,2
  2484  000F  2818               	goto	i1l1066
  2485                           
  2486                           ;Config.c: 133: {
  2487                           ;Config.c: 134: MidTick_DivCtr = 32;
  2488  0010  3020               	movlw	32
  2489  0011  00FC               	movwf	??_ISR
  2490  0012  087C               	movf	??_ISR,w
  2491  0013  00D9               	movwf	_MidTick_DivCtr
  2492                           
  2493                           ;Config.c: 135: MidTick_Task ++;
  2494  0014  3001               	movlw	1
  2495  0015  00FC               	movwf	??_ISR
  2496  0016  087C               	movf	??_ISR,w
  2497  0017  07BF               	addwf	_MidTick_Task,f
  2498  0018                     i1l1066:	
  2499                           
  2500                           ;Config.c: 136: }
  2501                           ;Config.c: 138: CCPR1= Voix_int_Step();
  2502  0018  20E4               	fcall	_Voix_int_Step
  2503  0019  0871               	movf	?_Voix_int_Step+1,w
  2504  001A  0025               	movlb	5	; select bank5
  2505  001B  0092               	movwf	18	;volatile
  2506  001C  0870               	movf	?_Voix_int_Step,w
  2507  001D  0091               	movwf	17	;volatile
  2508  001E                     i1l1068:	
  2509                           
  2510                           ;Config.c: 139: }
  2511                           ;Config.c: 141: if( RCIF )
  2512  001E  0020               	movlb	0	; select bank0
  2513  001F  1E91               	btfss	17,5	;volatile
  2514  0020  2834               	goto	i1l154
  2515                           
  2516                           ;Config.c: 142: {
  2517                           ;Config.c: 143: RCIF = 0;
  2518  0021  1291               	bcf	17,5	;volatile
  2519                           
  2520                           ;Config.c: 144: updown = ! updown;
  2521  0022  0839               	movf	_updown,w
  2522  0023  1D03               	btfss	3,2
  2523  0024  2827               	goto	u77_20
  2524  0025  3001               	movlw	1
  2525  0026  2828               	goto	u78_20
  2526  0027                     u77_20:	
  2527  0027  3000               	movlw	0
  2528  0028                     u78_20:	
  2529  0028  00FC               	movwf	??_ISR
  2530  0029  087C               	movf	??_ISR,w
  2531  002A  00B9               	movwf	_updown
  2532                           
  2533                           ;Config.c: 146: Train_Set_Acc( 0x30, updown );
  2534  002B  3030               	movlw	48
  2535  002C  00F0               	movwf	i1Train_Set_Acc@acc
  2536  002D  3000               	movlw	0
  2537  002E  00F1               	movwf	i1Train_Set_Acc@acc+1
  2538  002F  0839               	movf	_updown,w
  2539  0030  00FC               	movwf	??_ISR
  2540  0031  087C               	movf	??_ISR,w
  2541  0032  00F2               	movwf	i1Train_Set_Acc@up
  2542  0033  2248               	fcall	i1_Train_Set_Acc
  2543  0034                     i1l154:	
  2544  0034  087D               	movf	??_ISR+1,w
  2545  0035  0020               	movlb	0	; select bank0
  2546  0036  00FF               	movwf	127
  2547  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2548  0038  0009               	retfie
  2549  0039                     __end_of_ISR:	
  2550                           
  2551                           	psect	text11
  2552  0248                     __ptext11:	
  2553 ;; *************** function i1_Train_Set_Acc *****************
  2554 ;; Defined at:
  2555 ;;		line 103 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  acc             2    0[COMMON] unsigned short 
  2558 ;;  up              1    2[COMMON] unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2570 ;;      Params:         3       0       0       0
  2571 ;;      Locals:         0       0       0       0
  2572 ;;      Temps:          1       0       0       0
  2573 ;;      Totals:         4       0       0       0
  2574 ;;Total ram usage:        4 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_ISR
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function i1_Train_Set_Acc
  2585  0248                     i1_Train_Set_Acc:	
  2586                           
  2587                           ;App.c: 105: Train_Acc = acc;
  2588                           
  2589                           ;incstack = 0
  2590                           ; Regs used in i1_Train_Set_Acc: [wreg]
  2591  0248  0871               	movf	i1Train_Set_Acc@acc+1,w
  2592  0249  0020               	movlb	0	; select bank0
  2593  024A  00AF               	movwf	_Train_Acc+1
  2594  024B  0870               	movf	i1Train_Set_Acc@acc,w
  2595  024C  00AE               	movwf	_Train_Acc
  2596                           
  2597                           ;App.c: 106: Train_Up = up;
  2598  024D  0872               	movf	i1Train_Set_Acc@up,w
  2599  024E  00F3               	movwf	??i1_Train_Set_Acc
  2600  024F  0873               	movf	??i1_Train_Set_Acc,w
  2601  0250  00BA               	movwf	_Train_Up
  2602  0251  0008               	return
  2603  0252                     __end_ofi1_Train_Set_Acc:	
  2604                           
  2605                           	psect	text12
  2606  00E4                     __ptext12:	
  2607 ;; *************** function _Voix_int_Step *****************
  2608 ;; Defined at:
  2609 ;;		line 81 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  acc             2   10[COMMON] unsigned short 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  2    0[COMMON] unsigned short 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2623 ;;      Params:         2       0       0       0
  2624 ;;      Locals:         6       0       0       0
  2625 ;;      Temps:          4       0       0       0
  2626 ;;      Totals:        12       0       0       0
  2627 ;;Total ram usage:       12 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_ISR
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _Voix_int_Step
  2638  00E4                     _Voix_int_Step:	
  2639                           
  2640                           ;Voix.c: 83: uint16 acc = Vo_DC;
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _Voix_int_Step: [wreg+status,2+status,0]
  2644  00E4  0020               	movlb	0	; select bank0
  2645  00E5  082D               	movf	_Vo_DC+1,w
  2646  00E6  00FB               	movwf	Voix_int_Step@acc+1
  2647  00E7  082C               	movf	_Vo_DC,w
  2648  00E8  00FA               	movwf	Voix_int_Step@acc
  2649                           
  2650                           ;Voix.c: 85: if( Vo.Run )
  2651  00E9  1C38               	btfss	_Vo,0
  2652  00EA  2933               	goto	i1l206
  2653                           
  2654                           ;Voix.c: 86: {
  2655                           ;Voix.c: 87: Vo_1_Phase += Vo_1_Freq;
  2656  00EB  0852               	movf	_Vo_1_Freq,w
  2657  00EC  07AA               	addwf	_Vo_1_Phase,f
  2658  00ED  0853               	movf	_Vo_1_Freq+1,w
  2659  00EE  3DAB               	addwfc	_Vo_1_Phase+1,f
  2660                           
  2661                           ;Voix.c: 88: Vo_2_Phase += Vo_2_Freq;
  2662  00EF  0850               	movf	_Vo_2_Freq,w
  2663  00F0  07A8               	addwf	_Vo_2_Phase,f
  2664  00F1  0851               	movf	_Vo_2_Freq+1,w
  2665  00F2  3DA9               	addwfc	_Vo_2_Phase+1,f
  2666                           
  2667                           ;Voix.c: 90: acc += ( ( ( Vo_1_Phase >> 8 ) < Vo_1_Width ) ? Vo_1_Amp : 0 );
  2668  00F3  0837               	movf	_Vo_1_Width,w
  2669  00F4  00F2               	movwf	??_Voix_int_Step
  2670  00F5  01F3               	clrf	??_Voix_int_Step+1
  2671  00F6  082B               	movf	_Vo_1_Phase+1,w
  2672  00F7  00F5               	movwf	??_Voix_int_Step+3
  2673  00F8  082A               	movf	_Vo_1_Phase,w
  2674  00F9  00F4               	movwf	??_Voix_int_Step+2
  2675  00FA  0875               	movf	??_Voix_int_Step+3,w
  2676  00FB  00F4               	movwf	??_Voix_int_Step+2
  2677  00FC  01F5               	clrf	??_Voix_int_Step+3
  2678  00FD  0873               	movf	??_Voix_int_Step+1,w
  2679  00FE  0275               	subwf	??_Voix_int_Step+3,w
  2680  00FF  1D03               	skipz
  2681  0100  2903               	goto	u66_25
  2682  0101  0872               	movf	??_Voix_int_Step,w
  2683  0102  0274               	subwf	??_Voix_int_Step+2,w
  2684  0103                     u66_25:	
  2685  0103  1C03               	skipc
  2686  0104  2908               	goto	i1l1018
  2687  0105  01F6               	clrf	_Voix_int_Step$164
  2688  0106  01F7               	clrf	_Voix_int_Step$164+1
  2689  0107  290F               	goto	i1l210
  2690  0108                     i1l1018:	
  2691  0108  0857               	movf	_Vo_1_Amp,w
  2692  0109  00F2               	movwf	??_Voix_int_Step
  2693  010A  01F3               	clrf	??_Voix_int_Step+1
  2694  010B  0872               	movf	??_Voix_int_Step,w
  2695  010C  00F6               	movwf	_Voix_int_Step$164
  2696  010D  0873               	movf	??_Voix_int_Step+1,w
  2697  010E  00F7               	movwf	_Voix_int_Step$164+1
  2698  010F                     i1l210:	
  2699  010F  0876               	movf	_Voix_int_Step$164,w
  2700  0110  07FA               	addwf	Voix_int_Step@acc,f
  2701  0111  0877               	movf	_Voix_int_Step$164+1,w
  2702  0112  3DFB               	addwfc	Voix_int_Step@acc+1,f
  2703                           
  2704                           ;Voix.c: 91: acc += ( ( ( Vo_2_Phase >> 8 ) < Vo_2_Width ) ? Vo_2_Amp : 0 );
  2705  0113  0836               	movf	_Vo_2_Width,w
  2706  0114  00F2               	movwf	??_Voix_int_Step
  2707  0115  01F3               	clrf	??_Voix_int_Step+1
  2708  0116  0829               	movf	_Vo_2_Phase+1,w
  2709  0117  00F5               	movwf	??_Voix_int_Step+3
  2710  0118  0828               	movf	_Vo_2_Phase,w
  2711  0119  00F4               	movwf	??_Voix_int_Step+2
  2712  011A  0875               	movf	??_Voix_int_Step+3,w
  2713  011B  00F4               	movwf	??_Voix_int_Step+2
  2714  011C  01F5               	clrf	??_Voix_int_Step+3
  2715  011D  0873               	movf	??_Voix_int_Step+1,w
  2716  011E  0275               	subwf	??_Voix_int_Step+3,w
  2717  011F  1D03               	skipz
  2718  0120  2923               	goto	u67_25
  2719  0121  0872               	movf	??_Voix_int_Step,w
  2720  0122  0274               	subwf	??_Voix_int_Step+2,w
  2721  0123                     u67_25:	
  2722  0123  1C03               	skipc
  2723  0124  2928               	goto	i1l1024
  2724  0125  01F8               	clrf	_Voix_int_Step$165
  2725  0126  01F9               	clrf	_Voix_int_Step$165+1
  2726  0127  292F               	goto	i1l214
  2727  0128                     i1l1024:	
  2728  0128  0856               	movf	_Vo_2_Amp,w
  2729  0129  00F2               	movwf	??_Voix_int_Step
  2730  012A  01F3               	clrf	??_Voix_int_Step+1
  2731  012B  0872               	movf	??_Voix_int_Step,w
  2732  012C  00F8               	movwf	_Voix_int_Step$165
  2733  012D  0873               	movf	??_Voix_int_Step+1,w
  2734  012E  00F9               	movwf	_Voix_int_Step$165+1
  2735  012F                     i1l214:	
  2736  012F  0878               	movf	_Voix_int_Step$165,w
  2737  0130  07FA               	addwf	Voix_int_Step@acc,f
  2738  0131  0879               	movf	_Voix_int_Step$165+1,w
  2739  0132  3DFB               	addwfc	Voix_int_Step@acc+1,f
  2740  0133                     i1l206:	
  2741                           
  2742                           ;Voix.c: 92: }
  2743                           ;Voix.c: 94: return acc;
  2744  0133  087B               	movf	Voix_int_Step@acc+1,w
  2745  0134  00F1               	movwf	?_Voix_int_Step+1
  2746  0135  087A               	movf	Voix_int_Step@acc,w
  2747  0136  00F0               	movwf	?_Voix_int_Step
  2748  0137  0008               	return
  2749  0138                     __end_of_Voix_int_Step:	
  2750  007E                     btemp	set	126	;btemp
  2751  007E                     int$flags	set	126
  2752  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        40
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      76
    BANK1            80      0      14
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Voix_int_Step

Critical Paths under _main in BANK0

    _MidTick_Step->_App_Step
    _App_Step->_Train_Step
    _Train_Step->_Voix_Set_Speed
    _App_Init->_Voix_Set_Speed

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1231
                           _App_Init
                          _Chip_Init
                       _MidTick_Step
 ---------------------------------------------------------------------------------
 (1) _MidTick_Step                                         0     0      0     464
                           _App_Step
 ---------------------------------------------------------------------------------
 (2) _App_Step                                             3     3      0     464
                                             16 BANK0      2     2      0
                             _ADC_Go
                         _Noise_Step
                         _Train_Step
 ---------------------------------------------------------------------------------
 (3) _Train_Step                                           6     6      0     352
                                             10 BANK0      6     6      0
                     _Voix_Set_Speed
 ---------------------------------------------------------------------------------
 (3) _Noise_Step                                           4     4      0     112
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _ADC_Go                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Chip_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     767
                      _Train_Set_Acc
                     _Voix_Set_Speed
 ---------------------------------------------------------------------------------
 (4) _Voix_Set_Speed                                      10     8      2     351
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) _Train_Set_Acc                                        4     1      3     416
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0     169
                                             12 COMMON     2     2      0
                      _Voix_int_Step
                    i1_Train_Set_Acc
 ---------------------------------------------------------------------------------
 (6) i1_Train_Set_Acc                                      4     1      3      96
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _Voix_int_Step                                       12    10      2      73
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Train_Set_Acc
     _Voix_Set_Speed
   _Chip_Init
   _MidTick_Step
     _App_Step
       _ADC_Go
       _Noise_Step
       _Train_Step
         _Voix_Set_Speed

 _ISR (ROOT)
   _Voix_int_Step
   i1_Train_Set_Acc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       E       8       17.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      68      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Dec 25 10:41:12 2017

             __CFG_CP$OFF 0000                        l62 01CF                        _Vo 0038  
                     l169 01F9                       l902 00D6                       l904 00DF  
                     l922 01D2                       l924 01FB                       l940 015F  
                     l918 01F3                       l944 016C                       l960 01C0  
                     l882 0061                       l946 016E                       l938 015A  
                     l892 0081                       l956 01BC                       l964 01C3  
                     l958 01BE                       u400 005F                       _PR2 001E  
                     u520 01E1                       u505 00CB                       u530 01E2  
            __CFG_CPD$OFF 0000                       u435 006C                       u515 01D7  
                     u540 01E9                       _ISR 0004                       u550 01EA  
                     u455 0094                       u465 00A1                       u625 0153  
                     u635 0165                       u485 00B5                       u495 00C2  
                     wreg 0009          Train_Set_Acc@acc 005A              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1032 0236                      _LATA 010C  
                    _PIE1 0091                      _RCIF 008D                      _TMR2 001D  
          ??_MidTick_Step 006C              __CFG_WRT$OFF 0000                      _main 0234  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000             __CFG_BORV$LOW 0000                      start 0039  
           __CFG_CSWEN$ON 0000   __end_ofi1_Train_Set_Acc 0252            _Voix_Set_Speed 0057  
              _App_Output 0030                     ??_ISR 007C                     ?_main 0070  
                   _CCPR1 0291             __CFG_WDTE$OFF 0000                     _T2CON 001F  
          __CFG_DEBUG$OFF 0000                     i1l210 010F                     i1l214 012F  
                   i1l206 0133                     i1l154 0034             _Voix_int_Step 00E4  
                   _TRISA 008C                     u66_25 0103                     u67_25 0123  
                   u77_20 0027                     u78_20 0028                     _RXPPS 0E24  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000                     _Vo_DC 002C  
                   _Vol_1 003D         i1Train_Set_Acc@up 0072                     status 0003  
                   wtemp0 007E          __end_of_App_Init 0226          __end_of_App_Step 01D0  
  __end_of_Voix_Set_Speed 00E4            __CFG_MCLRE$OFF 0000           __initialization 003A  
            __end_of_main 023E        __size_of_Chip_Init 002F                    ??_main 006C  
          ?_Voix_int_Step 0070                _Vo_1_Phase 002A                _Vo_2_Phase 0028  
              _Vo_1_Width 0037                _Vo_2_Width 0036                    _ADCON0 009D  
                  _ADCON1 009E                    _ADC_Go 0265                    _ADRESH 009C  
                  _ANSELA 018C                    _RA5PPS 0E95                    _RC1STA 019D  
                  i1l1024 0128                    i1l1018 0108                    i1l1066 0018  
                  i1l1068 001E                    _INTCON 000B                    _TMR2IF 0089  
              _Noise_Seed 004C                    _TX1STA 019E                _Noise_Step 01D0  
         ?_Voix_Set_Speed 005A          ?i1_Train_Set_Acc 0070            __CFG_STVREN$ON 0000  
      i1Train_Set_Acc@acc 0070      __end_of_MidTick_Step 0259                    _updown 0039  
         _App_Tempo_Phase 0032                _Train_Step 0138                _Vol_margin 0269  
       __end_of_Chip_Init 01A3   __end_of__initialization 0054            __pcstackCOMMON 0070  
            __pidataBANK0 01FD              __pidataBANK1 0226           ??_Voix_int_Step 0072  
               ?_App_Init 0070                 ?_App_Step 0070                   ?_ADC_Go 0070  
             Noise_Step@a 005C               Noise_Step@b 005D                __pbssBANK0 0020  
             ?_Noise_Step 0070                __pmaintext 0234     __end_of_Train_Set_Acc 0248  
              __pintentry 0004                   _CCP1CON 0293       __CFG_RSTOSC$HFINT32 0000  
             ?_Train_Step 0070                   _LED_Ctr 0034                   _SP1BRGL 019B  
              ??_App_Init 0064                ??_App_Step 006A           __size_of_ADC_Go 0004  
                 _Vo_WT_1 0020                _down_table 0040                   _Vol_1_s 003C  
           App_Step@phase 003B     __size_of_MidTick_Step 0007                   __ptext1 0252  
                 __ptext2 01A3                   __ptext3 0138                   __ptext4 01D0  
                 __ptext5 0265                   __ptext6 0174                   __ptext7 0217  
                 __ptext8 0057                   __ptext9 023E              __size_of_ISR 0035  
     __size_of_Noise_Step 002D                   clrloop0 0260      end_of_initialization 0054  
        ??_Voix_Set_Speed 005C         _Voix_int_Step$164 0076         _Voix_int_Step$165 0078  
                 init_ram 0259              _MidTick_Task 003F               _Train_Speed 0054  
            _MidTick_Step 0252                   initloop 025A       __size_of_Train_Step 003C  
             Train_Step@s 0068              __pstringtext 0269            Noise_Step@bits 005B  
        __CFG_FEXTOSC$OFF 0000            __end_of_ADC_Go 0269           Train_Set_Acc@up 005C  
               _Chip_Init 0174                 _App_Noise 003E                 _App_Tempo 0058  
__size_ofi1_Train_Set_Acc 000A       start_initialization 003A               __end_of_ISR 0039  
                ??_ADC_Go 005A         __size_of_App_Init 000F         __size_of_App_Step 002D  
               _Vo_1_Freq 0052                 _Vo_2_Freq 0050              ??_Noise_Step 005A  
              ?_Chip_Init 0070          __CFG_LPBOREN$OFF 0000               __pdataBANK0 0040  
             __pdataBANK1 00A0                 _Train_Acc 002E     __end_of_Voix_int_Step 0138  
        Voix_int_Step@acc 007A              ??_Train_Step 0064        __end_of_Noise_Step 01FD  
               ___latbits 0000             __pcstackBANK0 005A        __end_of_Train_Step 0174  
        __CFG_PPS1WAY$OFF 0000        __end_of_Vol_margin 026A    __size_of_Train_Set_Acc 000A  
       ??i1_Train_Set_Acc 0073                 clear_ram0 025F               ??_Chip_Init 005A  
     Voix_Set_Speed@speed 005A       Voix_Set_Speed@power 0062                  _App_Init 0217  
                _App_Step 01A3                  _Vo_1_Amp 0057                  _Vo_2_Amp 0056  
          _MidTick_DivCtr 0059             _Train_Set_Acc 023E                  _Train_Up 003A  
                __ptext11 0248                  __ptext12 00E4             __size_of_main 000A  
          ?_Train_Set_Acc 005A   __size_of_Voix_Set_Speed 008D                  int$flags 007E  
                _up_table 00A0        Voix_Set_Speed@bias 0060                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000                _OSCFRQbits 091F           i1_Train_Set_Acc 0248  
           ?_MidTick_Step 0070    __size_of_Voix_int_Step 0054           ??_Train_Set_Acc 005D  
