

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Nov 11 20:06:21 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F18313 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0097                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  018C                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  0199                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019A                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019C                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019D                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019E                     	;# 
   140  019E                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  028C                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0297                     	;# 
   173  0298                     	;# 
   174  030C                     	;# 
   175  038C                     	;# 
   176  0391                     	;# 
   177  0392                     	;# 
   178  0393                     	;# 
   179  039A                     	;# 
   180  039C                     	;# 
   181  039D                     	;# 
   182  039E                     	;# 
   183  039F                     	;# 
   184  0498                     	;# 
   185  0498                     	;# 
   186  0499                     	;# 
   187  049A                     	;# 
   188  049B                     	;# 
   189  049B                     	;# 
   190  049C                     	;# 
   191  049D                     	;# 
   192  049E                     	;# 
   193  049F                     	;# 
   194  0617                     	;# 
   195  0618                     	;# 
   196  0619                     	;# 
   197  0619                     	;# 
   198  061A                     	;# 
   199  061B                     	;# 
   200  061C                     	;# 
   201  061C                     	;# 
   202  0691                     	;# 
   203  0692                     	;# 
   204  0693                     	;# 
   205  0694                     	;# 
   206  0695                     	;# 
   207  0696                     	;# 
   208  0697                     	;# 
   209  0698                     	;# 
   210  0699                     	;# 
   211  0891                     	;# 
   212  0891                     	;# 
   213  0891                     	;# 
   214  0891                     	;# 
   215  0891                     	;# 
   216  0891                     	;# 
   217  0892                     	;# 
   218  0892                     	;# 
   219  0892                     	;# 
   220  0893                     	;# 
   221  0893                     	;# 
   222  0893                     	;# 
   223  0893                     	;# 
   224  0893                     	;# 
   225  0893                     	;# 
   226  0894                     	;# 
   227  0894                     	;# 
   228  0894                     	;# 
   229  0895                     	;# 
   230  0895                     	;# 
   231  0895                     	;# 
   232  0896                     	;# 
   233  0896                     	;# 
   234  0896                     	;# 
   235  089B                     	;# 
   236  0911                     	;# 
   237  0912                     	;# 
   238  0913                     	;# 
   239  0914                     	;# 
   240  0915                     	;# 
   241  0916                     	;# 
   242  0918                     	;# 
   243  0919                     	;# 
   244  091A                     	;# 
   245  091B                     	;# 
   246  091C                     	;# 
   247  091D                     	;# 
   248  091E                     	;# 
   249  091F                     	;# 
   250  0E0F                     	;# 
   251  0E10                     	;# 
   252  0E11                     	;# 
   253  0E12                     	;# 
   254  0E13                     	;# 
   255  0E14                     	;# 
   256  0E15                     	;# 
   257  0E18                     	;# 
   258  0E1A                     	;# 
   259  0E1B                     	;# 
   260  0E1C                     	;# 
   261  0E20                     	;# 
   262  0E21                     	;# 
   263  0E22                     	;# 
   264  0E24                     	;# 
   265  0E25                     	;# 
   266  0E28                     	;# 
   267  0E29                     	;# 
   268  0E2A                     	;# 
   269  0E2B                     	;# 
   270  0E90                     	;# 
   271  0E91                     	;# 
   272  0E92                     	;# 
   273  0E94                     	;# 
   274  0E95                     	;# 
   275  0F0F                     	;# 
   276  0F10                     	;# 
   277  0F11                     	;# 
   278  0F12                     	;# 
   279  0F13                     	;# 
   280  0F14                     	;# 
   281  0F15                     	;# 
   282  0F16                     	;# 
   283  0F17                     	;# 
   284  0F18                     	;# 
   285  0F19                     	;# 
   286  0F1A                     	;# 
   287  0F1B                     	;# 
   288  0F1C                     	;# 
   289  0F1D                     	;# 
   290  0F1E                     	;# 
   291  0F1F                     	;# 
   292  0F20                     	;# 
   293  0F21                     	;# 
   294  0F22                     	;# 
   295  0F23                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  008C                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0097                     	;# 
   346  009B                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  0111                     	;# 
   354  0112                     	;# 
   355  0115                     	;# 
   356  0116                     	;# 
   357  0117                     	;# 
   358  0118                     	;# 
   359  0119                     	;# 
   360  018C                     	;# 
   361  0197                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  019F                     	;# 
   386  019F                     	;# 
   387  020C                     	;# 
   388  0211                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0214                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0215                     	;# 
   400  0216                     	;# 
   401  0216                     	;# 
   402  0217                     	;# 
   403  0217                     	;# 
   404  028C                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0297                     	;# 
   414  0298                     	;# 
   415  030C                     	;# 
   416  038C                     	;# 
   417  0391                     	;# 
   418  0392                     	;# 
   419  0393                     	;# 
   420  039A                     	;# 
   421  039C                     	;# 
   422  039D                     	;# 
   423  039E                     	;# 
   424  039F                     	;# 
   425  0498                     	;# 
   426  0498                     	;# 
   427  0499                     	;# 
   428  049A                     	;# 
   429  049B                     	;# 
   430  049B                     	;# 
   431  049C                     	;# 
   432  049D                     	;# 
   433  049E                     	;# 
   434  049F                     	;# 
   435  0617                     	;# 
   436  0618                     	;# 
   437  0619                     	;# 
   438  0619                     	;# 
   439  061A                     	;# 
   440  061B                     	;# 
   441  061C                     	;# 
   442  061C                     	;# 
   443  0691                     	;# 
   444  0692                     	;# 
   445  0693                     	;# 
   446  0694                     	;# 
   447  0695                     	;# 
   448  0696                     	;# 
   449  0697                     	;# 
   450  0698                     	;# 
   451  0699                     	;# 
   452  0891                     	;# 
   453  0891                     	;# 
   454  0891                     	;# 
   455  0891                     	;# 
   456  0891                     	;# 
   457  0891                     	;# 
   458  0892                     	;# 
   459  0892                     	;# 
   460  0892                     	;# 
   461  0893                     	;# 
   462  0893                     	;# 
   463  0893                     	;# 
   464  0893                     	;# 
   465  0893                     	;# 
   466  0893                     	;# 
   467  0894                     	;# 
   468  0894                     	;# 
   469  0894                     	;# 
   470  0895                     	;# 
   471  0895                     	;# 
   472  0895                     	;# 
   473  0896                     	;# 
   474  0896                     	;# 
   475  0896                     	;# 
   476  089B                     	;# 
   477  0911                     	;# 
   478  0912                     	;# 
   479  0913                     	;# 
   480  0914                     	;# 
   481  0915                     	;# 
   482  0916                     	;# 
   483  0918                     	;# 
   484  0919                     	;# 
   485  091A                     	;# 
   486  091B                     	;# 
   487  091C                     	;# 
   488  091D                     	;# 
   489  091E                     	;# 
   490  091F                     	;# 
   491  0E0F                     	;# 
   492  0E10                     	;# 
   493  0E11                     	;# 
   494  0E12                     	;# 
   495  0E13                     	;# 
   496  0E14                     	;# 
   497  0E15                     	;# 
   498  0E18                     	;# 
   499  0E1A                     	;# 
   500  0E1B                     	;# 
   501  0E1C                     	;# 
   502  0E20                     	;# 
   503  0E21                     	;# 
   504  0E22                     	;# 
   505  0E24                     	;# 
   506  0E25                     	;# 
   507  0E28                     	;# 
   508  0E29                     	;# 
   509  0E2A                     	;# 
   510  0E2B                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0F0F                     	;# 
   517  0F10                     	;# 
   518  0F11                     	;# 
   519  0F12                     	;# 
   520  0F13                     	;# 
   521  0F14                     	;# 
   522  0F15                     	;# 
   523  0F16                     	;# 
   524  0F17                     	;# 
   525  0F18                     	;# 
   526  0F19                     	;# 
   527  0F1A                     	;# 
   528  0F1B                     	;# 
   529  0F1C                     	;# 
   530  0F1D                     	;# 
   531  0F1E                     	;# 
   532  0F1F                     	;# 
   533  0F20                     	;# 
   534  0F21                     	;# 
   535  0F22                     	;# 
   536  0F23                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  008C                     	;# 
   581  0090                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0097                     	;# 
   587  009B                     	;# 
   588  009B                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  0111                     	;# 
   595  0112                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  018C                     	;# 
   602  0197                     	;# 
   603  0199                     	;# 
   604  0199                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019A                     	;# 
   608  019A                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019D                     	;# 
   619  019D                     	;# 
   620  019E                     	;# 
   621  019E                     	;# 
   622  019E                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  019F                     	;# 
   627  019F                     	;# 
   628  020C                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  028C                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0294                     	;# 
   651  0295                     	;# 
   652  0295                     	;# 
   653  0296                     	;# 
   654  0297                     	;# 
   655  0298                     	;# 
   656  030C                     	;# 
   657  038C                     	;# 
   658  0391                     	;# 
   659  0392                     	;# 
   660  0393                     	;# 
   661  039A                     	;# 
   662  039C                     	;# 
   663  039D                     	;# 
   664  039E                     	;# 
   665  039F                     	;# 
   666  0498                     	;# 
   667  0498                     	;# 
   668  0499                     	;# 
   669  049A                     	;# 
   670  049B                     	;# 
   671  049B                     	;# 
   672  049C                     	;# 
   673  049D                     	;# 
   674  049E                     	;# 
   675  049F                     	;# 
   676  0617                     	;# 
   677  0618                     	;# 
   678  0619                     	;# 
   679  0619                     	;# 
   680  061A                     	;# 
   681  061B                     	;# 
   682  061C                     	;# 
   683  061C                     	;# 
   684  0691                     	;# 
   685  0692                     	;# 
   686  0693                     	;# 
   687  0694                     	;# 
   688  0695                     	;# 
   689  0696                     	;# 
   690  0697                     	;# 
   691  0698                     	;# 
   692  0699                     	;# 
   693  0891                     	;# 
   694  0891                     	;# 
   695  0891                     	;# 
   696  0891                     	;# 
   697  0891                     	;# 
   698  0891                     	;# 
   699  0892                     	;# 
   700  0892                     	;# 
   701  0892                     	;# 
   702  0893                     	;# 
   703  0893                     	;# 
   704  0893                     	;# 
   705  0893                     	;# 
   706  0893                     	;# 
   707  0893                     	;# 
   708  0894                     	;# 
   709  0894                     	;# 
   710  0894                     	;# 
   711  0895                     	;# 
   712  0895                     	;# 
   713  0895                     	;# 
   714  0896                     	;# 
   715  0896                     	;# 
   716  0896                     	;# 
   717  089B                     	;# 
   718  0911                     	;# 
   719  0912                     	;# 
   720  0913                     	;# 
   721  0914                     	;# 
   722  0915                     	;# 
   723  0916                     	;# 
   724  0918                     	;# 
   725  0919                     	;# 
   726  091A                     	;# 
   727  091B                     	;# 
   728  091C                     	;# 
   729  091D                     	;# 
   730  091E                     	;# 
   731  091F                     	;# 
   732  0E0F                     	;# 
   733  0E10                     	;# 
   734  0E11                     	;# 
   735  0E12                     	;# 
   736  0E13                     	;# 
   737  0E14                     	;# 
   738  0E15                     	;# 
   739  0E18                     	;# 
   740  0E1A                     	;# 
   741  0E1B                     	;# 
   742  0E1C                     	;# 
   743  0E20                     	;# 
   744  0E21                     	;# 
   745  0E22                     	;# 
   746  0E24                     	;# 
   747  0E25                     	;# 
   748  0E28                     	;# 
   749  0E29                     	;# 
   750  0E2A                     	;# 
   751  0E2B                     	;# 
   752  0E90                     	;# 
   753  0E91                     	;# 
   754  0E92                     	;# 
   755  0E94                     	;# 
   756  0E95                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0FE4                     	;# 
   779  0FE5                     	;# 
   780  0FE6                     	;# 
   781  0FE7                     	;# 
   782  0FE8                     	;# 
   783  0FE9                     	;# 
   784  0FEA                     	;# 
   785  0FEB                     	;# 
   786  0FED                     	;# 
   787  0FEE                     	;# 
   788  0FEF                     	;# 
   789  0000                     	;# 
   790  0001                     	;# 
   791  0002                     	;# 
   792  0003                     	;# 
   793  0004                     	;# 
   794  0005                     	;# 
   795  0006                     	;# 
   796  0007                     	;# 
   797  0008                     	;# 
   798  0009                     	;# 
   799  000A                     	;# 
   800  000B                     	;# 
   801  000C                     	;# 
   802  0010                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0013                     	;# 
   806  0014                     	;# 
   807  0015                     	;# 
   808  0015                     	;# 
   809  0016                     	;# 
   810  0016                     	;# 
   811  0017                     	;# 
   812  0018                     	;# 
   813  0019                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001D                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  008C                     	;# 
   822  0090                     	;# 
   823  0091                     	;# 
   824  0092                     	;# 
   825  0093                     	;# 
   826  0094                     	;# 
   827  0097                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  009F                     	;# 
   834  010C                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0115                     	;# 
   838  0116                     	;# 
   839  0117                     	;# 
   840  0118                     	;# 
   841  0119                     	;# 
   842  018C                     	;# 
   843  0197                     	;# 
   844  0199                     	;# 
   845  0199                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019A                     	;# 
   849  019A                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019C                     	;# 
   856  019C                     	;# 
   857  019C                     	;# 
   858  019D                     	;# 
   859  019D                     	;# 
   860  019D                     	;# 
   861  019E                     	;# 
   862  019E                     	;# 
   863  019E                     	;# 
   864  019F                     	;# 
   865  019F                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  020C                     	;# 
   870  0211                     	;# 
   871  0211                     	;# 
   872  0212                     	;# 
   873  0212                     	;# 
   874  0213                     	;# 
   875  0213                     	;# 
   876  0214                     	;# 
   877  0214                     	;# 
   878  0215                     	;# 
   879  0215                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0216                     	;# 
   884  0217                     	;# 
   885  0217                     	;# 
   886  028C                     	;# 
   887  0291                     	;# 
   888  0291                     	;# 
   889  0292                     	;# 
   890  0293                     	;# 
   891  0294                     	;# 
   892  0295                     	;# 
   893  0295                     	;# 
   894  0296                     	;# 
   895  0297                     	;# 
   896  0298                     	;# 
   897  030C                     	;# 
   898  038C                     	;# 
   899  0391                     	;# 
   900  0392                     	;# 
   901  0393                     	;# 
   902  039A                     	;# 
   903  039C                     	;# 
   904  039D                     	;# 
   905  039E                     	;# 
   906  039F                     	;# 
   907  0498                     	;# 
   908  0498                     	;# 
   909  0499                     	;# 
   910  049A                     	;# 
   911  049B                     	;# 
   912  049B                     	;# 
   913  049C                     	;# 
   914  049D                     	;# 
   915  049E                     	;# 
   916  049F                     	;# 
   917  0617                     	;# 
   918  0618                     	;# 
   919  0619                     	;# 
   920  0619                     	;# 
   921  061A                     	;# 
   922  061B                     	;# 
   923  061C                     	;# 
   924  061C                     	;# 
   925  0691                     	;# 
   926  0692                     	;# 
   927  0693                     	;# 
   928  0694                     	;# 
   929  0695                     	;# 
   930  0696                     	;# 
   931  0697                     	;# 
   932  0698                     	;# 
   933  0699                     	;# 
   934  0891                     	;# 
   935  0891                     	;# 
   936  0891                     	;# 
   937  0891                     	;# 
   938  0891                     	;# 
   939  0891                     	;# 
   940  0892                     	;# 
   941  0892                     	;# 
   942  0892                     	;# 
   943  0893                     	;# 
   944  0893                     	;# 
   945  0893                     	;# 
   946  0893                     	;# 
   947  0893                     	;# 
   948  0893                     	;# 
   949  0894                     	;# 
   950  0894                     	;# 
   951  0894                     	;# 
   952  0895                     	;# 
   953  0895                     	;# 
   954  0895                     	;# 
   955  0896                     	;# 
   956  0896                     	;# 
   957  0896                     	;# 
   958  089B                     	;# 
   959  0911                     	;# 
   960  0912                     	;# 
   961  0913                     	;# 
   962  0914                     	;# 
   963  0915                     	;# 
   964  0916                     	;# 
   965  0918                     	;# 
   966  0919                     	;# 
   967  091A                     	;# 
   968  091B                     	;# 
   969  091C                     	;# 
   970  091D                     	;# 
   971  091E                     	;# 
   972  091F                     	;# 
   973  0E0F                     	;# 
   974  0E10                     	;# 
   975  0E11                     	;# 
   976  0E12                     	;# 
   977  0E13                     	;# 
   978  0E14                     	;# 
   979  0E15                     	;# 
   980  0E18                     	;# 
   981  0E1A                     	;# 
   982  0E1B                     	;# 
   983  0E1C                     	;# 
   984  0E20                     	;# 
   985  0E21                     	;# 
   986  0E22                     	;# 
   987  0E24                     	;# 
   988  0E25                     	;# 
   989  0E28                     	;# 
   990  0E29                     	;# 
   991  0E2A                     	;# 
   992  0E2B                     	;# 
   993  0E90                     	;# 
   994  0E91                     	;# 
   995  0E92                     	;# 
   996  0E94                     	;# 
   997  0E95                     	;# 
   998  0F0F                     	;# 
   999  0F10                     	;# 
  1000  0F11                     	;# 
  1001  0F12                     	;# 
  1002  0F13                     	;# 
  1003  0F14                     	;# 
  1004  0F15                     	;# 
  1005  0F16                     	;# 
  1006  0F17                     	;# 
  1007  0F18                     	;# 
  1008  0F19                     	;# 
  1009  0F1A                     	;# 
  1010  0F1B                     	;# 
  1011  0F1C                     	;# 
  1012  0F1D                     	;# 
  1013  0F1E                     	;# 
  1014  0F1F                     	;# 
  1015  0F20                     	;# 
  1016  0F21                     	;# 
  1017  0F22                     	;# 
  1018  0F23                     	;# 
  1019  0FE4                     	;# 
  1020  0FE5                     	;# 
  1021  0FE6                     	;# 
  1022  0FE7                     	;# 
  1023  0FE8                     	;# 
  1024  0FE9                     	;# 
  1025  0FEA                     	;# 
  1026  0FEB                     	;# 
  1027  0FED                     	;# 
  1028  0FEE                     	;# 
  1029  0FEF                     	;# 
  1030                           
  1031                           	psect	idataCOMMON
  1032  0209                     __pidataCOMMON:	
  1033                           
  1034                           ;initializer for _Vo_1_Freq
  1035  0209  34CA               	retlw	202
  1036  020A  3400               	retlw	0
  1037                           
  1038                           ;initializer for _MidTick_DivCtr
  1039  020B  3401               	retlw	1
  1040                           
  1041                           	psect	idataBANK0
  1042  0192                     __pidataBANK0:	
  1043                           
  1044                           ;initializer for _up_table
  1045  0192  3402               	retlw	2
  1046  0193  3400               	retlw	0
  1047  0194  3405               	retlw	5
  1048  0195  3400               	retlw	0
  1049  0196  340A               	retlw	10
  1050  0197  3400               	retlw	0
  1051  0198  340F               	retlw	15
  1052  0199  3400               	retlw	0
  1053  019A  3419               	retlw	25
  1054  019B  3400               	retlw	0
  1055  019C  3433               	retlw	51
  1056  019D  3400               	retlw	0
  1057  019E  3425               	retlw	37
  1058  019F  3400               	retlw	0
  1059                           
  1060                           ;initializer for _down_table
  1061  01A0  342D               	retlw	45
  1062  01A1  3400               	retlw	0
  1063  01A2  3433               	retlw	51
  1064  01A3  3400               	retlw	0
  1065  01A4  3419               	retlw	25
  1066  01A5  3400               	retlw	0
  1067  01A6  340F               	retlw	15
  1068  01A7  3400               	retlw	0
  1069  01A8  3405               	retlw	5
  1070  01A9  3400               	retlw	0
  1071  01AA  3401               	retlw	1
  1072  01AB  3400               	retlw	0
  1073                           
  1074                           ;initializer for _Noise_Seed
  1075  01AC  3401               	retlw	1
  1076  01AD  3400               	retlw	0
  1077  01AE  3400               	retlw	0
  1078  01AF  3400               	retlw	0
  1079                           
  1080                           ;initializer for _Vo_2_Freq
  1081  01B0  3439               	retlw	57
  1082  01B1  3404               	retlw	4
  1083                           
  1084                           ;initializer for _Train_Speed
  1085  01B2  3400               	retlw	0
  1086  01B3  3401               	retlw	1
  1087                           
  1088                           ;initializer for _App_Tempo
  1089  01B4  346C               	retlw	108
  1090                           
  1091                           	psect	stringtext
  1092  020F                     __pstringtext:	
  1093  020F                     _Vol_margin:	
  1094  020F  3402               	retlw	2
  1095  0210                     __end_of_Vol_margin:	
  1096  000B                     _INTCON	set	11
  1097  001F                     _T2CON	set	31
  1098  001D                     _TMR2	set	29
  1099  001E                     _PR2	set	30
  1100  0089                     _TMR2IF	set	137
  1101  009C                     _ADRESH	set	156
  1102  009D                     _ADCON0	set	157
  1103  0091                     _PIE1	set	145
  1104  009E                     _ADCON1	set	158
  1105  008C                     _TRISA	set	140
  1106  010C                     _LATA	set	268
  1107  018C                     _ANSELA	set	396
  1108  0291                     _CCPR1	set	657
  1109  0293                     _CCP1CON	set	659
  1110  091F                     _OSCFRQbits	set	2335
  1111  0E94                     _RA4PPS	set	3732
  1112                           
  1113                           ; #config settings
  1114  0000                     
  1115                           	psect	cinit
  1116  0024                     start_initialization:	
  1117  0024                     __initialization:	
  1118                           
  1119                           ; Initialize objects allocated to COMMON
  1120  0024  3009               	movlw	low __pidataCOMMON
  1121  0025  0084               	movwf	4
  1122  0026  3082               	movlw	(high __pidataCOMMON)| (0+128)
  1123  0027  0085               	movwf	5
  1124  0028  3079               	movlw	low __pdataCOMMON
  1125  0029  0086               	movwf	6
  1126  002A  3000               	movlw	high __pdataCOMMON
  1127  002B  0087               	movwf	7
  1128  002C  3003               	movlw	3
  1129  002D  21F3               	fcall	init_ram
  1130                           
  1131                           ; Initialize objects allocated to BANK0
  1132  002E  3092               	movlw	low __pidataBANK0
  1133  002F  0084               	movwf	4
  1134  0030  3081               	movlw	(high __pidataBANK0)| (0+128)
  1135  0031  0085               	movwf	5
  1136  0032  3020               	movlw	low __pdataBANK0
  1137  0033  0086               	movwf	6
  1138  0034  3000               	movlw	high __pdataBANK0
  1139  0035  0087               	movwf	7
  1140  0036  3023               	movlw	35
  1141  0037  21F3               	fcall	init_ram
  1142                           
  1143                           ; Clear objects allocated to COMMON
  1144  0038  01F6               	clrf	__pbssCOMMON& (0+127)
  1145  0039  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1146  003A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1147                           
  1148                           ; Clear objects allocated to BANK0
  1149  003B  3043               	movlw	low __pbssBANK0
  1150  003C  0084               	movwf	4
  1151  003D  3000               	movlw	high __pbssBANK0
  1152  003E  0085               	movwf	5
  1153  003F  3017               	movlw	23
  1154  0040  21F9               	fcall	clear_ram0
  1155  0041                     end_of_initialization:	
  1156                           ;End of C runtime variable initialization code
  1157                           
  1158  0041                     __end_of__initialization:	
  1159  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1160  0042  0020               	movlb	0
  1161  0043  29DF               	ljmp	_main	;jump to C main() function
  1162                           
  1163                           	psect	bssCOMMON
  1164  0076                     __pbssCOMMON:	
  1165  0076                     _App_Output:	
  1166  0076                     	ds	2
  1167  0078                     _Vol_1_s:	
  1168  0078                     	ds	1
  1169                           
  1170                           	psect	dataCOMMON
  1171  0079                     __pdataCOMMON:	
  1172  0079                     _Vo_1_Freq:	
  1173  0079                     	ds	2
  1174  007B                     _MidTick_DivCtr:	
  1175  007B                     	ds	1
  1176                           
  1177                           	psect	bssBANK0
  1178  0043                     __pbssBANK0:	
  1179  0043                     _Vo_WT_1:	
  1180  0043                     	ds	8
  1181  004B                     _Vo_2_Phase:	
  1182  004B                     	ds	2
  1183  004D                     _Vo_1_Phase:	
  1184  004D                     	ds	2
  1185  004F                     _Train_Acc:	
  1186  004F                     	ds	2
  1187  0051                     _App_Tempo_Phase:	
  1188  0051                     	ds	2
  1189  0053                     _LED_Ctr:	
  1190  0053                     	ds	2
  1191  0055                     _Train_Up:	
  1192  0055                     	ds	1
  1193  0056                     App_Step@phase:	
  1194  0056                     	ds	1
  1195  0057                     _Vol_1:	
  1196  0057                     	ds	1
  1197  0058                     _App_Noise:	
  1198  0058                     	ds	1
  1199  0059                     _MidTick_Task:	
  1200  0059                     	ds	1
  1201                           
  1202                           	psect	dataBANK0
  1203  0020                     __pdataBANK0:	
  1204  0020                     _up_table:	
  1205  0020                     	ds	14
  1206  002E                     _down_table:	
  1207  002E                     	ds	12
  1208  003A                     _Noise_Seed:	
  1209  003A                     	ds	4
  1210  003E                     _Vo_2_Freq:	
  1211  003E                     	ds	2
  1212  0040                     _Train_Speed:	
  1213  0040                     	ds	2
  1214  0042                     _App_Tempo:	
  1215  0042                     	ds	1
  1216                           
  1217                           	psect	inittext
  1218  01F3                     init_ram:	
  1219  01F3  00FE               	movwf	126
  1220  01F4                     initloop:	
  1221  01F4  0012               	moviw fsr0++
  1222  01F5  001E               	movwi fsr1++
  1223  01F6  0BFE               	decfsz	126,f
  1224  01F7  29F4               	goto	initloop
  1225  01F8  3400               	retlw	0
  1226                           
  1227                           	psect	clrtext
  1228  01F9                     clear_ram0:	
  1229                           ;	Called with FSR0 containing the base address, and
  1230                           ;	WREG with the size to clear
  1231                           
  1232  01F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1233  01FA                     clrloop0:	
  1234  01FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1235  01FB  3101               	addfsr 0,1
  1236  01FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1237  01FD  29FA               	goto	clrloop0	;have we reached the end yet?
  1238  01FE  3400               	retlw	0	;all done for this memory range, return
  1239                           
  1240                           	psect	cstackCOMMON
  1241  0070                     __pcstackCOMMON:	
  1242  0070                     ?_App_Init:	
  1243  0070                     ?_Chip_Init:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_MidTick_Step:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_App_Step:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_Noise_Step:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_ADC_Go:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_ADC_Res:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_Vol_1_Change:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_Train_Step:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_main:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_ISR:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_Voix_int_Step:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x0
  1278  0070                     	ds	2
  1279  0072                     ??_Voix_int_Step:	
  1280  0072                     Voix_int_Step@rt:	
  1281                           ; 1 bytes @ 0x2
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x2
  1285  0072                     	ds	2
  1286  0074                     ??_ISR:	
  1287                           
  1288                           ; 1 bytes @ 0x4
  1289  0074                     	ds	2
  1290                           
  1291                           	psect	cstackBANK0
  1292  005A                     __pcstackBANK0:	
  1293  005A                     ??_Chip_Init:	
  1294  005A                     ?_Voix_Set_Speed:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  005A                     ??_Noise_Step:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  005A                     ??_ADC_Go:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  005A                     ??_ADC_Res:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  005A                     ?_Train_Set_Acc:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  005A                     Train_Set_Acc@acc:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  005A                     Voix_Set_Speed@speed:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x0
  1317  005A                     	ds	1
  1318  005B                     Noise_Step@bits:	
  1319                           
  1320                           ; 1 bytes @ 0x1
  1321  005B                     	ds	1
  1322  005C                     ??_Voix_Set_Speed:	
  1323  005C                     Train_Set_Acc@up:	
  1324                           ; 1 bytes @ 0x2
  1325                           
  1326  005C                     Noise_Step@a:	
  1327                           ; 1 bytes @ 0x2
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x2
  1331  005C                     	ds	1
  1332  005D                     ??_Train_Set_Acc:	
  1333  005D                     Noise_Step@b:	
  1334                           ; 1 bytes @ 0x3
  1335                           
  1336                           
  1337                           ; 1 bytes @ 0x3
  1338  005D                     	ds	1
  1339  005E                     ??_Vol_1_Change:	
  1340                           
  1341                           ; 1 bytes @ 0x4
  1342  005E                     	ds	2
  1343  0060                     ??_App_Init:	
  1344  0060                     ??_Train_Step:	
  1345                           ; 1 bytes @ 0x6
  1346                           
  1347  0060                     Vol_1_Change@s:	
  1348                           ; 1 bytes @ 0x6
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x6
  1352  0060                     	ds	4
  1353  0064                     Train_Step@s:	
  1354                           
  1355                           ; 2 bytes @ 0xA
  1356  0064                     	ds	2
  1357  0066                     ??_App_Step:	
  1358                           
  1359                           ; 1 bytes @ 0xC
  1360  0066                     	ds	4
  1361  006A                     App_Step@vol:	
  1362                           
  1363                           ; 1 bytes @ 0x10
  1364  006A                     	ds	1
  1365  006B                     ??_MidTick_Step:	
  1366                           
  1367                           ; 1 bytes @ 0x11
  1368  006B                     	ds	2
  1369  006D                     ??_main:	
  1370                           
  1371                           	psect	maintext
  1372  01DF                     __pmaintext:	
  1373                           ; 1 bytes @ 0x13
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1376 ;;
  1377 ;; *************** function _main *****************
  1378 ;; Defined at:
  1379 ;;		line 13 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : B1F/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1393 ;;      Params:         0       0       0       0
  1394 ;;      Locals:         0       0       0       0
  1395 ;;      Temps:          0       0       0       0
  1396 ;;      Totals:         0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels required when called:    6
  1399 ;; This function calls:
  1400 ;;		_App_Init
  1401 ;;		_Chip_Init
  1402 ;;		_MidTick_Step
  1403 ;; This function is called by:
  1404 ;;		Startup code after reset
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _main
  1410  01DF                     _main:	
  1411                           
  1412                           ;Main.c: 15: App_Init();
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1416  01DF  21FF               	fcall	_App_Init
  1417                           
  1418                           ;Main.c: 16: Chip_Init();
  1419  01E0  216C               	fcall	_Chip_Init
  1420  01E1                     l1090:	
  1421                           ;Main.c: 19: while( 1 )
  1422                           
  1423                           
  1424                           ;Main.c: 20: {
  1425                           ;Main.c: 21: if( MidTick_Task )
  1426  01E1  0020               	movlb	0	; select bank0
  1427  01E2  0859               	movf	_MidTick_Task,w
  1428  01E3  1903               	btfsc	3,2
  1429  01E4  29E1               	goto	l1090
  1430                           
  1431                           ;Main.c: 22: {
  1432                           ;Main.c: 23: MidTick_Task --;
  1433  01E5  3001               	movlw	1
  1434  01E6  02D9               	subwf	_MidTick_Task,f
  1435                           
  1436                           ;Main.c: 24: MidTick_Step();
  1437  01E7  21CC               	fcall	_MidTick_Step
  1438  01E8  29E1               	goto	l1090
  1439  01E9                     __end_of_main:	
  1440                           
  1441                           	psect	text1
  1442  01CC                     __ptext1:	
  1443 ;; *************** function _MidTick_Step *****************
  1444 ;; Defined at:
  1445 ;;		line 31 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Main.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1459 ;;      Params:         0       0       0       0
  1460 ;;      Locals:         0       0       0       0
  1461 ;;      Temps:          0       2       0       0
  1462 ;;      Totals:         0       2       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    5
  1466 ;; This function calls:
  1467 ;;		_App_Step
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _MidTick_Step
  1475  01CC                     _MidTick_Step:	
  1476                           
  1477                           ;Main.c: 33: LED_Ctr += 131;
  1478                           
  1479                           ;incstack = 0
  1480                           ; Regs used in _MidTick_Step: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1481  01CC  3083               	movlw	131
  1482  01CD  0020               	movlb	0	; select bank0
  1483  01CE  07D3               	addwf	_LED_Ctr,f
  1484  01CF  3000               	movlw	0
  1485  01D0  3DD4               	addwfc	_LED_Ctr+1,f
  1486                           
  1487                           ;Main.c: 34: LATA = LED_Ctr >> 10;
  1488  01D1  0854               	movf	_LED_Ctr+1,w
  1489  01D2  00EC               	movwf	??_MidTick_Step+1
  1490  01D3  0853               	movf	_LED_Ctr,w
  1491  01D4  00EB               	movwf	??_MidTick_Step
  1492  01D5  300A               	movlw	10
  1493  01D6                     u815:	
  1494  01D6  36EC               	lsrf	??_MidTick_Step+1,f
  1495  01D7  0CEB               	rrf	??_MidTick_Step,f
  1496  01D8  0B89               	decfsz	9,f
  1497  01D9  29D6               	goto	u815
  1498  01DA  086B               	movf	??_MidTick_Step,w
  1499  01DB  0022               	movlb	2	; select bank2
  1500  01DC  008C               	movwf	12	;volatile
  1501                           
  1502                           ;Main.c: 36: App_Step();
  1503  01DD  2044               	fcall	_App_Step
  1504  01DE  0008               	return
  1505  01DF                     __end_of_MidTick_Step:	
  1506                           
  1507                           	psect	text2
  1508  0044                     __ptext2:	
  1509 ;; *************** function _App_Step *****************
  1510 ;; Defined at:
  1511 ;;		line 27 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  vol             1   16[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1525 ;;      Params:         0       0       0       0
  1526 ;;      Locals:         0       1       0       0
  1527 ;;      Temps:          0       4       0       0
  1528 ;;      Totals:         0       5       0       0
  1529 ;;Total ram usage:        5 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    4
  1532 ;; This function calls:
  1533 ;;		_ADC_Go
  1534 ;;		_ADC_Res
  1535 ;;		_Noise_Step
  1536 ;;		_Train_Step
  1537 ;;		_Vol_1_Change
  1538 ;; This function is called by:
  1539 ;;		_MidTick_Step
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _App_Step
  1545  0044                     _App_Step:	
  1546                           
  1547                           ;App.c: 29: static uint8 phase = 0;
  1548                           ;App.c: 31: App_Noise = Noise_Step( 4 ) & 0xFF;
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _App_Step: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1552  0044  3004               	movlw	4
  1553  0045  2118               	fcall	_Noise_Step
  1554  0046  0020               	movlb	0	; select bank0
  1555  0047  00E6               	movwf	??_App_Step
  1556  0048  0866               	movf	??_App_Step,w
  1557  0049  00D8               	movwf	_App_Noise
  1558                           
  1559                           ;App.c: 32: App_Tempo_Phase += App_Tempo;
  1560  004A  0842               	movf	_App_Tempo,w
  1561  004B  00E6               	movwf	??_App_Step
  1562  004C  01E7               	clrf	??_App_Step+1
  1563  004D  0866               	movf	??_App_Step,w
  1564  004E  07D1               	addwf	_App_Tempo_Phase,f
  1565  004F  0867               	movf	??_App_Step+1,w
  1566  0050  3DD2               	addwfc	_App_Tempo_Phase+1,f
  1567                           
  1568                           ;App.c: 34: if( App_Tempo_Phase >= 2500 )
  1569  0051  3009               	movlw	9
  1570  0052  0252               	subwf	_App_Tempo_Phase+1,w
  1571  0053  30C4               	movlw	196
  1572  0054  1903               	skipnz
  1573  0055  0251               	subwf	_App_Tempo_Phase,w
  1574  0056  1C03               	skipc
  1575  0057  2896               	goto	l1052
  1576                           
  1577                           ;App.c: 35: {
  1578                           ;App.c: 36: App_Tempo_Phase -= 2500;
  1579  0058  30C4               	movlw	196
  1580  0059  02D1               	subwf	_App_Tempo_Phase,f
  1581  005A  3009               	movlw	9
  1582  005B  3BD2               	subwfb	_App_Tempo_Phase+1,f
  1583                           
  1584                           ;App.c: 37: }
  1585                           ;App.c: 39: uint8 vol;
  1586                           ;App.c: 40: switch( phase ++ )
  1587  005C  2896               	goto	l1052
  1588  005D                     l1030:	
  1589                           ;App.c: 41: {
  1590                           ;App.c: 42: case 0:
  1591                           
  1592                           
  1593                           ;App.c: 43: ADC_Go();
  1594  005D  2205               	fcall	_ADC_Go
  1595                           
  1596                           ;App.c: 44: break;
  1597  005E  0008               	return
  1598  005F                     l1032:	
  1599                           ;App.c: 46: case 1:
  1600                           
  1601                           
  1602                           ;App.c: 47: vol = ADC_Res();
  1603  005F  220C               	fcall	_ADC_Res
  1604  0060  0020               	movlb	0	; select bank0
  1605  0061  00E6               	movwf	??_App_Step
  1606  0062  0866               	movf	??_App_Step,w
  1607  0063  00EA               	movwf	App_Step@vol
  1608                           
  1609                           ;App.c: 48: if( vol > ( Vol_1 + Vol_margin ) )
  1610  0064  300F               	movlw	low (_Vol_margin| (0+32768))
  1611  0065  0084               	movwf	4
  1612  0066  3082               	movlw	high (_Vol_margin| (0+32768))
  1613  0067  0085               	movwf	5
  1614  0068  0800               	movf	0,w	;code access
  1615  0069  00E6               	movwf	??_App_Step
  1616  006A  0857               	movf	_Vol_1,w
  1617  006B  0766               	addwf	??_App_Step,w
  1618  006C  00E7               	movwf	??_App_Step+1
  1619  006D  01E8               	clrf	??_App_Step+2
  1620  006E  0DE8               	rlf	??_App_Step+2,f
  1621  006F  0868               	movf	??_App_Step+2,w
  1622  0070  3A80               	xorlw	128
  1623  0071  00E9               	movwf	??_App_Step+3
  1624  0072  3080               	movlw	128
  1625  0073  0269               	subwf	??_App_Step+3,w
  1626  0074  1D03               	skipz
  1627  0075  2878               	goto	u795
  1628  0076  086A               	movf	App_Step@vol,w
  1629  0077  0267               	subwf	??_App_Step+1,w
  1630  0078                     u795:	
  1631  0078  1803               	skipnc
  1632  0079  2887               	goto	l1040
  1633                           
  1634                           ;App.c: 49: {
  1635                           ;App.c: 50: Vol_1 = vol - Vol_margin;
  1636  007A  300F               	movlw	low (_Vol_margin| (0+32768))
  1637  007B  0084               	movwf	4
  1638  007C  3082               	movlw	high (_Vol_margin| (0+32768))
  1639  007D  0085               	movwf	5
  1640  007E  0800               	movf	0,w	;code access
  1641  007F  3AFF               	xorlw	255
  1642  0080  3E01               	addlw	1
  1643  0081  0020               	movlb	0	; select bank0
  1644  0082  076A               	addwf	App_Step@vol,w
  1645  0083  00E6               	movwf	??_App_Step
  1646  0084  0866               	movf	??_App_Step,w
  1647  0085  00D7               	movwf	_Vol_1
  1648                           
  1649                           ;App.c: 51: Vol_1_Change();
  1650  0086  20DF               	fcall	_Vol_1_Change
  1651  0087                     l1040:	
  1652                           
  1653                           ;App.c: 52: }
  1654                           ;App.c: 53: if( vol < Vol_1 )
  1655  0087  0020               	movlb	0	; select bank0
  1656  0088  0857               	movf	_Vol_1,w
  1657  0089  026A               	subwf	App_Step@vol,w
  1658  008A  1803               	skipnc
  1659  008B  2891               	goto	l1046
  1660                           
  1661                           ;App.c: 54: {
  1662                           ;App.c: 55: Vol_1 = vol;
  1663  008C  086A               	movf	App_Step@vol,w
  1664  008D  00E6               	movwf	??_App_Step
  1665  008E  0866               	movf	??_App_Step,w
  1666  008F  00D7               	movwf	_Vol_1
  1667                           
  1668                           ;App.c: 56: Vol_1_Change();
  1669  0090  20DF               	fcall	_Vol_1_Change
  1670  0091                     l1046:	
  1671                           
  1672                           ;App.c: 57: }
  1673                           ;App.c: 58: Train_Step();
  1674  0091  20A3               	fcall	_Train_Step
  1675                           
  1676                           ;App.c: 59: break;
  1677  0092  0008               	return
  1678  0093                     l1048:	
  1679                           ;App.c: 61: case 9:
  1680                           
  1681                           
  1682                           ;App.c: 62: phase = 0;
  1683  0093  0020               	movlb	0	; select bank0
  1684  0094  01D6               	clrf	App_Step@phase
  1685                           
  1686                           ;App.c: 64: }
  1687                           
  1688                           ;App.c: 63: break;
  1689  0095  0008               	return
  1690  0096                     l1052:	
  1691  0096  0856               	movf	App_Step@phase,w
  1692  0097  0AD6               	incf	App_Step@phase,f
  1693                           
  1694                           ; Switch size 1, requested type "space"
  1695                           ; Number of cases is 3, Range of values is 0 to 9
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte           10     6 (average)
  1699                           ; direct_byte           26     6 (fixed)
  1700                           ; jumptable            260     6 (fixed)
  1701                           ;	Chosen strategy is simple_byte
  1702  0098  3A00               	xorlw	0	; case 0
  1703  0099  1903               	skipnz
  1704  009A  285D               	goto	l1030
  1705  009B  3A01               	xorlw	1	; case 1
  1706  009C  1903               	skipnz
  1707  009D  285F               	goto	l1032
  1708  009E  3A08               	xorlw	8	; case 9
  1709  009F  1903               	skipnz
  1710  00A0  2893               	goto	l1048
  1711  00A1  28A2               	goto	l81
  1712  00A2                     l81:	
  1713  00A2  0008               	return
  1714  00A3                     __end_of_App_Step:	
  1715                           
  1716                           	psect	text3
  1717  00DF                     __ptext3:	
  1718 ;; *************** function _Vol_1_Change *****************
  1719 ;; Defined at:
  1720 ;;		line 88 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  s               1    6[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1734 ;;      Params:         0       0       0       0
  1735 ;;      Locals:         0       1       0       0
  1736 ;;      Temps:          0       2       0       0
  1737 ;;      Totals:         0       3       0       0
  1738 ;;Total ram usage:        3 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		_Train_Set_Acc
  1743 ;; This function is called by:
  1744 ;;		_App_Step
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _Vol_1_Change
  1750  00DF                     _Vol_1_Change:	
  1751                           
  1752                           ;App.c: 90: uint8 s = Vol_1 >> 4;
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _Vol_1_Change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1756  00DF  0020               	movlb	0	; select bank0
  1757  00E0  0857               	movf	_Vol_1,w
  1758  00E1  00DE               	movwf	??_Vol_1_Change
  1759  00E2  3004               	movlw	4
  1760  00E3                     u705:	
  1761  00E3  36DE               	lsrf	??_Vol_1_Change,f
  1762  00E4  0B89               	decfsz	9,f
  1763  00E5  28E3               	goto	u705
  1764  00E6  085E               	movf	??_Vol_1_Change,w
  1765  00E7  00DF               	movwf	??_Vol_1_Change+1
  1766  00E8  085F               	movf	??_Vol_1_Change+1,w
  1767  00E9  00E0               	movwf	Vol_1_Change@s
  1768                           
  1769                           ;App.c: 91: if( s == Vol_1_s ) return;
  1770  00EA  0860               	movf	Vol_1_Change@s,w
  1771  00EB  0678               	xorwf	_Vol_1_s,w
  1772  00EC  1903               	btfsc	3,2
  1773  00ED  0008               	return
  1774                           
  1775                           ;App.c: 92: Vol_1_s = s;
  1776  00EE  0860               	movf	Vol_1_Change@s,w
  1777  00EF  00DE               	movwf	??_Vol_1_Change
  1778  00F0  085E               	movf	??_Vol_1_Change,w
  1779  00F1  00F8               	movwf	_Vol_1_s
  1780                           
  1781                           ;App.c: 94: if( s > 8 )
  1782  00F2  3009               	movlw	9
  1783  00F3  0260               	subwf	Vol_1_Change@s,w
  1784  00F4  1C03               	skipc
  1785  00F5  2903               	goto	l996
  1786                           
  1787                           ;App.c: 95: {
  1788                           ;App.c: 96: Train_Set_Acc( up_table[ s - 9 ], 1 );
  1789  00F6  3560               	lslf	Vol_1_Change@s,w
  1790  00F7  3EEE               	addlw	238
  1791  00F8  3E20               	addlw	(low (_up_table| 0))& (0+255)
  1792  00F9  0086               	movwf	6
  1793  00FA  0187               	clrf	7
  1794  00FB  3F40               	moviw [0]fsr1
  1795  00FC  00DA               	movwf	Train_Set_Acc@acc
  1796  00FD  3F41               	moviw [1]fsr1
  1797  00FE  00DB               	movwf	Train_Set_Acc@acc+1
  1798  00FF  01DC               	clrf	Train_Set_Acc@up
  1799  0100  0ADC               	incf	Train_Set_Acc@up,f
  1800  0101  21E9               	fcall	_Train_Set_Acc
  1801                           
  1802                           ;App.c: 97: }
  1803  0102  0008               	return
  1804  0103                     l996:	
  1805                           
  1806                           ;App.c: 98: else if( s < 2 )
  1807  0103  3002               	movlw	2
  1808  0104  0020               	movlb	0	; select bank0
  1809  0105  0260               	subwf	Vol_1_Change@s,w
  1810  0106  1C03               	btfss	3,0
  1811  0107  0008               	return
  1812                           
  1813                           ;App.c: 101: else if( s < 8 )
  1814                           
  1815                           ;App.c: 99: {
  1816                           ;App.c: 100: }
  1817  0108  3008               	movlw	8
  1818  0109  0260               	subwf	Vol_1_Change@s,w
  1819  010A  1803               	skipnc
  1820  010B  0008               	return
  1821                           
  1822                           ;App.c: 102: {
  1823                           ;App.c: 103: Train_Set_Acc( down_table[ s - 2 ], 0 );
  1824  010C  3560               	lslf	Vol_1_Change@s,w
  1825  010D  3EFC               	addlw	252
  1826  010E  3E2E               	addlw	(low (_down_table| 0))& (0+255)
  1827  010F  0086               	movwf	6
  1828  0110  0187               	clrf	7
  1829  0111  3F40               	moviw [0]fsr1
  1830  0112  00DA               	movwf	Train_Set_Acc@acc
  1831  0113  3F41               	moviw [1]fsr1
  1832  0114  00DB               	movwf	Train_Set_Acc@acc+1
  1833  0115  01DC               	clrf	Train_Set_Acc@up
  1834  0116  21E9               	fcall	_Train_Set_Acc
  1835  0117  0008               	return
  1836  0118                     __end_of_Vol_1_Change:	
  1837                           
  1838                           	psect	text4
  1839  01E9                     __ptext4:	
  1840 ;; *************** function _Train_Set_Acc *****************
  1841 ;; Defined at:
  1842 ;;		line 114 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  acc             2    0[BANK0 ] unsigned short 
  1845 ;;  up              1    2[BANK0 ] unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1857 ;;      Params:         0       3       0       0
  1858 ;;      Locals:         0       0       0       0
  1859 ;;      Temps:          0       1       0       0
  1860 ;;      Totals:         0       4       0       0
  1861 ;;Total ram usage:        4 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_Vol_1_Change
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _Train_Set_Acc
  1873  01E9                     _Train_Set_Acc:	
  1874                           
  1875                           ;App.c: 116: Train_Acc = acc;
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _Train_Set_Acc: [wreg]
  1879  01E9  0020               	movlb	0	; select bank0
  1880  01EA  085B               	movf	Train_Set_Acc@acc+1,w
  1881  01EB  00D0               	movwf	_Train_Acc+1
  1882  01EC  085A               	movf	Train_Set_Acc@acc,w
  1883  01ED  00CF               	movwf	_Train_Acc
  1884                           
  1885                           ;App.c: 117: Train_Up = up;
  1886  01EE  085C               	movf	Train_Set_Acc@up,w
  1887  01EF  00DD               	movwf	??_Train_Set_Acc
  1888  01F0  085D               	movf	??_Train_Set_Acc,w
  1889  01F1  00D5               	movwf	_Train_Up
  1890  01F2  0008               	return
  1891  01F3                     __end_of_Train_Set_Acc:	
  1892                           
  1893                           	psect	text5
  1894  00A3                     __ptext5:	
  1895 ;; *************** function _Train_Step *****************
  1896 ;; Defined at:
  1897 ;;		line 120 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  s               2   10[BANK0 ] unsigned short 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1911 ;;      Params:         0       0       0       0
  1912 ;;      Locals:         0       2       0       0
  1913 ;;      Temps:          0       4       0       0
  1914 ;;      Totals:         0       6       0       0
  1915 ;;Total ram usage:        6 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		_Voix_Set_Speed
  1920 ;; This function is called by:
  1921 ;;		_App_Step
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _Train_Step
  1927  00A3                     _Train_Step:	
  1928                           
  1929                           ;App.c: 122: uint16 s = Train_Speed;
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _Train_Step: [wreg+status,2+status,0+pclath+cstack]
  1933  00A3  0020               	movlb	0	; select bank0
  1934  00A4  0841               	movf	_Train_Speed+1,w
  1935  00A5  00E5               	movwf	Train_Step@s+1
  1936  00A6  0840               	movf	_Train_Speed,w
  1937  00A7  00E4               	movwf	Train_Step@s
  1938                           
  1939                           ;App.c: 124: if( Train_Up )
  1940  00A8  0855               	movf	_Train_Up,w
  1941  00A9  1903               	btfsc	3,2
  1942  00AA  28CA               	goto	l1014
  1943                           
  1944                           ;App.c: 125: {
  1945                           ;App.c: 126: if( Train_Speed < ( 0xFFFF - Train_Acc ) ) Train_Speed += Train_Acc;
  1946  00AB  094F               	comf	_Train_Acc,w
  1947  00AC  00E0               	movwf	??_Train_Step
  1948  00AD  0950               	comf	_Train_Acc+1,w
  1949  00AE  00E1               	movwf	??_Train_Step+1
  1950  00AF  0AE0               	incf	??_Train_Step,f
  1951  00B0  1903               	skipnz
  1952  00B1  0AE1               	incf	??_Train_Step+1,f
  1953  00B2  0860               	movf	??_Train_Step,w
  1954  00B3  3EFF               	addlw	255
  1955  00B4  00E2               	movwf	??_Train_Step+2
  1956  00B5  30FF               	movlw	255
  1957  00B6  3D61               	addwfc	??_Train_Step+1,w
  1958  00B7  00E3               	movwf	??_Train_Step+3
  1959  00B8  0863               	movf	??_Train_Step+3,w
  1960  00B9  0241               	subwf	_Train_Speed+1,w
  1961  00BA  1D03               	skipz
  1962  00BB  28BE               	goto	u765
  1963  00BC  0862               	movf	??_Train_Step+2,w
  1964  00BD  0240               	subwf	_Train_Speed,w
  1965  00BE                     u765:	
  1966  00BE  1803               	skipnc
  1967  00BF  28C5               	goto	l1012
  1968  00C0  084F               	movf	_Train_Acc,w
  1969  00C1  07C0               	addwf	_Train_Speed,f
  1970  00C2  0850               	movf	_Train_Acc+1,w
  1971  00C3  3DC1               	addwfc	_Train_Speed+1,f
  1972  00C4  28D9               	goto	l1020
  1973  00C5                     l1012:	
  1974                           
  1975                           ;App.c: 127: else Train_Speed = 0xFFFF;
  1976  00C5  30FF               	movlw	255
  1977  00C6  00C0               	movwf	_Train_Speed
  1978  00C7  30FF               	movlw	255
  1979  00C8  00C1               	movwf	_Train_Speed+1
  1980                           
  1981                           ;App.c: 128: }
  1982  00C9  28D9               	goto	l1020
  1983  00CA                     l1014:	
  1984                           
  1985                           ;App.c: 129: else
  1986                           ;App.c: 130: {
  1987                           ;App.c: 131: if( Train_Speed > Train_Acc ) Train_Speed -= Train_Acc;
  1988  00CA  0841               	movf	_Train_Speed+1,w
  1989  00CB  0250               	subwf	_Train_Acc+1,w
  1990  00CC  1D03               	skipz
  1991  00CD  28D0               	goto	u775
  1992  00CE  0840               	movf	_Train_Speed,w
  1993  00CF  024F               	subwf	_Train_Acc,w
  1994  00D0                     u775:	
  1995  00D0  1803               	skipnc
  1996  00D1  28D7               	goto	l1018
  1997  00D2  084F               	movf	_Train_Acc,w
  1998  00D3  02C0               	subwf	_Train_Speed,f
  1999  00D4  0850               	movf	_Train_Acc+1,w
  2000  00D5  3BC1               	subwfb	_Train_Speed+1,f
  2001  00D6  28D9               	goto	l1020
  2002  00D7                     l1018:	
  2003                           
  2004                           ;App.c: 132: else Train_Speed = 0;
  2005  00D7  01C0               	clrf	_Train_Speed
  2006  00D8  01C1               	clrf	_Train_Speed+1
  2007  00D9                     l1020:	
  2008                           
  2009                           ;App.c: 133: }
  2010                           ;App.c: 135: Voix_Set_Speed( Train_Speed );
  2011  00D9  0841               	movf	_Train_Speed+1,w
  2012  00DA  00DB               	movwf	Voix_Set_Speed@speed+1
  2013  00DB  0840               	movf	_Train_Speed,w
  2014  00DC  00DA               	movwf	Voix_Set_Speed@speed
  2015  00DD  2145               	fcall	_Voix_Set_Speed
  2016  00DE  0008               	return
  2017  00DF                     __end_of_Train_Step:	
  2018                           
  2019                           	psect	text6
  2020  0118                     __ptext6:	
  2021 ;; *************** function _Noise_Step *****************
  2022 ;; Defined at:
  2023 ;;		line 6 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  bits            1    wreg     unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  bits            1    1[BANK0 ] unsigned char 
  2028 ;;  b               1    3[BANK0 ] unsigned char 
  2029 ;;  a               1    2[BANK0 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      unsigned char 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2039 ;;      Params:         0       0       0       0
  2040 ;;      Locals:         0       3       0       0
  2041 ;;      Temps:          0       1       0       0
  2042 ;;      Totals:         0       4       0       0
  2043 ;;Total ram usage:        4 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    2
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_App_Step
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _Noise_Step
  2055  0118                     _Noise_Step:	
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _Noise_Step: [wreg+status,2+status,0]
  2059                           ;Noise_Step@bits stored from wreg
  2060  0118  0020               	movlb	0	; select bank0
  2061  0119  00DB               	movwf	Noise_Step@bits
  2062  011A                     l974:	
  2063                           ;Voix.c: 8: while( -- bits )
  2064                           
  2065  011A  3001               	movlw	1
  2066  011B  02DB               	subwf	Noise_Step@bits,f
  2067  011C  1903               	btfsc	3,2
  2068  011D  2943               	goto	l976
  2069                           
  2070                           ;Voix.c: 9: {
  2071                           ;Voix.c: 10: Noise_Seed <<= 1;
  2072  011E  3001               	movlw	1
  2073  011F                     u605:	
  2074  011F  35BA               	lslf	_Noise_Seed,f
  2075  0120  0DBB               	rlf	_Noise_Seed+1,f
  2076  0121  0DBC               	rlf	_Noise_Seed+2,f
  2077  0122  0DBD               	rlf	_Noise_Seed+3,f
  2078  0123  0B89               	decfsz	9,f
  2079  0124  291F               	goto	u605
  2080                           
  2081                           ;Voix.c: 11: bool a = ( Noise_Seed & 0x100000 ) > 0;
  2082  0125  1E3C               	btfss	_Noise_Seed+2,4
  2083  0126  2929               	goto	u610
  2084  0127  3001               	movlw	1
  2085  0128  292A               	goto	u620
  2086  0129                     u610:	
  2087  0129  3000               	movlw	0
  2088  012A                     u620:	
  2089  012A  00DA               	movwf	??_Noise_Step
  2090  012B  085A               	movf	??_Noise_Step,w
  2091  012C  00DC               	movwf	Noise_Step@a
  2092                           
  2093                           ;Voix.c: 12: bool b = ( Noise_Seed & 0x400000 ) > 0;
  2094  012D  1F3C               	btfss	_Noise_Seed+2,6
  2095  012E  2931               	goto	u630
  2096  012F  3001               	movlw	1
  2097  0130  2932               	goto	u640
  2098  0131                     u630:	
  2099  0131  3000               	movlw	0
  2100  0132                     u640:	
  2101  0132  00DA               	movwf	??_Noise_Step
  2102  0133  085A               	movf	??_Noise_Step,w
  2103  0134  00DD               	movwf	Noise_Step@b
  2104                           
  2105                           ;Voix.c: 14: if( ( !a && b ) || ( a && !b ) ) Noise_Seed |= 1;
  2106  0135  085C               	movf	Noise_Step@a,w
  2107  0136  1D03               	btfss	3,2
  2108  0137  293B               	goto	l970
  2109  0138  085D               	movf	Noise_Step@b,w
  2110  0139  1D03               	btfss	3,2
  2111  013A  2941               	goto	l160
  2112  013B                     l970:	
  2113  013B  085C               	movf	Noise_Step@a,w
  2114  013C  1903               	btfsc	3,2
  2115  013D  291A               	goto	l974
  2116  013E  085D               	movf	Noise_Step@b,w
  2117  013F  1D03               	btfss	3,2
  2118  0140  291A               	goto	l974
  2119  0141                     l160:	
  2120  0141  143A               	bsf	_Noise_Seed,0
  2121  0142  291A               	goto	l974
  2122  0143                     l976:	
  2123                           
  2124                           ;Voix.c: 15: }
  2125                           ;Voix.c: 17: return Noise_Seed;
  2126  0143  083A               	movf	_Noise_Seed,w
  2127  0144  0008               	return
  2128  0145                     __end_of_Noise_Step:	
  2129                           
  2130                           	psect	text7
  2131  020C                     __ptext7:	
  2132 ;; *************** function _ADC_Res *****************
  2133 ;; Defined at:
  2134 ;;		line 115 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      unsigned char 
  2141 ;; Registers used:
  2142 ;;		wreg
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2148 ;;      Params:         0       0       0       0
  2149 ;;      Locals:         0       0       0       0
  2150 ;;      Temps:          0       0       0       0
  2151 ;;      Totals:         0       0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    2
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_App_Step
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _ADC_Res
  2164  020C                     _ADC_Res:	
  2165                           
  2166                           ;Config.c: 117: return ADRESH;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _ADC_Res: [wreg]
  2170  020C  0021               	movlb	1	; select bank1
  2171  020D  081C               	movf	28,w	;volatile
  2172  020E  0008               	return
  2173  020F                     __end_of_ADC_Res:	
  2174                           
  2175                           	psect	text8
  2176  0205                     __ptext8:	
  2177 ;; *************** function _ADC_Go *****************
  2178 ;; Defined at:
  2179 ;;		line 106 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2193 ;;      Params:         0       0       0       0
  2194 ;;      Locals:         0       0       0       0
  2195 ;;      Temps:          0       0       0       0
  2196 ;;      Totals:         0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    2
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_App_Step
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _ADC_Go
  2209  0205                     _ADC_Go:	
  2210                           
  2211                           ;Config.c: 108: ADCON0 =
  2212                           ;Config.c: 109: 1 << 0x0 |
  2213                           ;Config.c: 110: 1 << 0x1 |
  2214                           ;Config.c: 111: 2 << 0x2
  2215                           ;Config.c: 112: ;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _ADC_Go: [wreg]
  2219  0205  300B               	movlw	11
  2220  0206  0021               	movlb	1	; select bank1
  2221  0207  009D               	movwf	29	;volatile
  2222  0208  0008               	return
  2223  0209                     __end_of_ADC_Go:	
  2224                           
  2225                           	psect	text9
  2226  016C                     __ptext9:	
  2227 ;; *************** function _Chip_Init *****************
  2228 ;; Defined at:
  2229 ;;		line 58 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Config.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2243 ;;      Params:         0       0       0       0
  2244 ;;      Locals:         0       0       0       0
  2245 ;;      Temps:          0       0       0       0
  2246 ;;      Totals:         0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    2
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _Chip_Init
  2259  016C                     _Chip_Init:	
  2260                           
  2261                           ;Config.c: 62: OSCFRQbits.HFFRQ = 6;
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _Chip_Init: [wreg+status,2+status,0]
  2265  016C  0032               	movlb	18	; select bank18
  2266  016D  081F               	movf	31,w	;volatile
  2267  016E  39F0               	andlw	-16
  2268  016F  3806               	iorlw	6
  2269  0170  009F               	movwf	31	;volatile
  2270                           
  2271                           ;Config.c: 66: ANSELA = 0b000100;
  2272  0171  3004               	movlw	4
  2273  0172  0023               	movlb	3	; select bank3
  2274  0173  008C               	movwf	12	;volatile
  2275                           
  2276                           ;Config.c: 67: TRISA = 0b000111;
  2277  0174  3007               	movlw	7
  2278  0175  0021               	movlb	1	; select bank1
  2279  0176  008C               	movwf	12	;volatile
  2280                           
  2281                           ;Config.c: 68: LATA = 0b000000;
  2282  0177  0022               	movlb	2	; select bank2
  2283  0178  018C               	clrf	12	;volatile
  2284                           
  2285                           ;Config.c: 70: RA4PPS = 0x0C;
  2286  0179  300C               	movlw	12
  2287  017A  003D               	movlb	29	; select bank29
  2288  017B  0094               	movwf	20	;volatile
  2289                           
  2290                           ;Config.c: 74: ADCON1 =
  2291                           ;Config.c: 75: 6 << 0x4
  2292                           ;Config.c: 76: ;
  2293  017C  3060               	movlw	96
  2294  017D  0021               	movlb	1	; select bank1
  2295  017E  009E               	movwf	30	;volatile
  2296                           
  2297                           ;Config.c: 80: PR2 = 250 - 1;
  2298  017F  30F9               	movlw	249
  2299  0180  0020               	movlb	0	; select bank0
  2300  0181  009E               	movwf	30	;volatile
  2301                           
  2302                           ;Config.c: 81: TMR2 = 0;
  2303  0182  019D               	clrf	29	;volatile
  2304                           
  2305                           ;Config.c: 82: T2CON =
  2306                           ;Config.c: 83: 0 << 0x0 |
  2307                           ;Config.c: 84: 0 << 0x3 |
  2308                           ;Config.c: 85: 1 << 0x2
  2309                           ;Config.c: 86: ;
  2310  0183  3004               	movlw	4
  2311  0184  009F               	movwf	31	;volatile
  2312                           
  2313                           ;Config.c: 88: CCPR1 = 0x100;
  2314  0185  3001               	movlw	1
  2315  0186  0025               	movlb	5	; select bank5
  2316  0187  0092               	movwf	18	;volatile
  2317  0188  3000               	movlw	0
  2318  0189  0091               	movwf	17	;volatile
  2319                           
  2320                           ;Config.c: 90: CCP1CON =
  2321                           ;Config.c: 91: 1 << 0x7 |
  2322                           ;Config.c: 92: 0x0F << 0x0
  2323                           ;Config.c: 93: ;
  2324  018A  308F               	movlw	143
  2325  018B  0093               	movwf	19	;volatile
  2326                           
  2327                           ;Config.c: 97: PIE1 =
  2328                           ;Config.c: 98: 1 << 0x1
  2329                           ;Config.c: 99: ;
  2330  018C  3002               	movlw	2
  2331  018D  0021               	movlb	1	; select bank1
  2332  018E  0091               	movwf	17	;volatile
  2333                           
  2334                           ;Config.c: 100: INTCON =
  2335                           ;Config.c: 101: 1 << 0x6 |
  2336                           ;Config.c: 102: 1 << 0x7
  2337                           ;Config.c: 103: ;
  2338  018F  30C0               	movlw	192
  2339  0190  008B               	movwf	11	;volatile
  2340  0191  0008               	return
  2341  0192                     __end_of_Chip_Init:	
  2342                           
  2343                           	psect	text10
  2344  01FF                     __ptext10:	
  2345 ;; *************** function _App_Init *****************
  2346 ;; Defined at:
  2347 ;;		line 22 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\App.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2361 ;;      Params:         0       0       0       0
  2362 ;;      Locals:         0       0       0       0
  2363 ;;      Temps:          0       0       0       0
  2364 ;;      Totals:         0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    3
  2368 ;; This function calls:
  2369 ;;		_Voix_Set_Speed
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _App_Init
  2377  01FF                     _App_Init:	
  2378                           
  2379                           ;App.c: 24: Voix_Set_Speed( 0 );
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
  2383  01FF  3000               	movlw	0
  2384  0200  0020               	movlb	0	; select bank0
  2385  0201  00DA               	movwf	Voix_Set_Speed@speed
  2386  0202  00DB               	movwf	Voix_Set_Speed@speed+1
  2387  0203  2145               	fcall	_Voix_Set_Speed
  2388  0204  0008               	return
  2389  0205                     __end_of_App_Init:	
  2390                           
  2391                           	psect	text11
  2392  0145                     __ptext11:	
  2393 ;; *************** function _Voix_Set_Speed *****************
  2394 ;; Defined at:
  2395 ;;		line 32 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  speed           2    0[BANK0 ] unsigned short 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       2       0       0
  2410 ;;      Locals:         0       0       0       0
  2411 ;;      Temps:          0       4       0       0
  2412 ;;      Totals:         0       6       0       0
  2413 ;;Total ram usage:        6 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_App_Init
  2420 ;;		_Train_Step
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _Voix_Set_Speed
  2426  0145                     _Voix_Set_Speed:	
  2427                           
  2428                           ;Voix.c: 34: Vo_1_Freq = speed >> 6;
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _Voix_Set_Speed: [wreg+status,2+status,0]
  2432  0145  0020               	movlb	0	; select bank0
  2433  0146  085B               	movf	Voix_Set_Speed@speed+1,w
  2434  0147  00DD               	movwf	??_Voix_Set_Speed+1
  2435  0148  085A               	movf	Voix_Set_Speed@speed,w
  2436  0149  00DC               	movwf	??_Voix_Set_Speed
  2437  014A  3006               	movlw	6
  2438  014B                     u575:	
  2439  014B  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2440  014C  0CDC               	rrf	??_Voix_Set_Speed,f
  2441  014D  0B89               	decfsz	9,f
  2442  014E  294B               	goto	u575
  2443  014F  085C               	movf	??_Voix_Set_Speed,w
  2444  0150  00F9               	movwf	_Vo_1_Freq
  2445  0151  085D               	movf	??_Voix_Set_Speed+1,w
  2446  0152  00FA               	movwf	_Vo_1_Freq+1
  2447                           
  2448                           ;Voix.c: 35: Vo_2_Freq = ( speed >> 6 ) + ( speed >> 4 );
  2449  0153  085B               	movf	Voix_Set_Speed@speed+1,w
  2450  0154  00DD               	movwf	??_Voix_Set_Speed+1
  2451  0155  085A               	movf	Voix_Set_Speed@speed,w
  2452  0156  00DC               	movwf	??_Voix_Set_Speed
  2453  0157  3004               	movlw	4
  2454  0158                     u585:	
  2455  0158  36DD               	lsrf	??_Voix_Set_Speed+1,f
  2456  0159  0CDC               	rrf	??_Voix_Set_Speed,f
  2457  015A  0B89               	decfsz	9,f
  2458  015B  2958               	goto	u585
  2459  015C  085B               	movf	Voix_Set_Speed@speed+1,w
  2460  015D  00DF               	movwf	??_Voix_Set_Speed+3
  2461  015E  085A               	movf	Voix_Set_Speed@speed,w
  2462  015F  00DE               	movwf	??_Voix_Set_Speed+2
  2463  0160  3006               	movlw	6
  2464  0161                     u595:	
  2465  0161  36DF               	lsrf	??_Voix_Set_Speed+3,f
  2466  0162  0CDE               	rrf	??_Voix_Set_Speed+2,f
  2467  0163  0B89               	decfsz	9,f
  2468  0164  2961               	goto	u595
  2469  0165  085C               	movf	??_Voix_Set_Speed,w
  2470  0166  075E               	addwf	??_Voix_Set_Speed+2,w
  2471  0167  00BE               	movwf	_Vo_2_Freq
  2472  0168  085D               	movf	??_Voix_Set_Speed+1,w
  2473  0169  3D5F               	addwfc	??_Voix_Set_Speed+3,w
  2474  016A  00BF               	movwf	_Vo_2_Freq+1
  2475  016B  0008               	return
  2476  016C                     __end_of_Voix_Set_Speed:	
  2477                           
  2478                           	psect	intentry
  2479  0004                     __pintentry:	
  2480 ;; *************** function _ISR *****************
  2481 ;; Defined at:
  2482 ;;		line 40 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2496 ;;      Params:         0       0       0       0
  2497 ;;      Locals:         0       0       0       0
  2498 ;;      Temps:          2       0       0       0
  2499 ;;      Totals:         2       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		_Voix_int_Step
  2505 ;; This function is called by:
  2506 ;;		Interrupt level 1
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510  0004                     _ISR:	
  2511                           
  2512                           ;incstack = 0
  2513  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2514                           
  2515                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2516  0005  3180               	pagesel	$
  2517  0006  0020               	movlb	0	; select bank0
  2518  0007  087F               	movf	127,w
  2519  0008  00F5               	movwf	??_ISR+1
  2520                           
  2521                           ;Main.c: 42: if( TMR2IF )
  2522  0009  1C91               	btfss	17,1	;volatile
  2523  000A  281E               	goto	i1l37
  2524                           
  2525                           ;Main.c: 43: {
  2526                           ;Main.c: 44: TMR2IF = 0;
  2527  000B  1091               	bcf	17,1	;volatile
  2528                           
  2529                           ;Main.c: 46: if( -- MidTick_DivCtr == 0 )
  2530  000C  3001               	movlw	1
  2531  000D  02FB               	subwf	_MidTick_DivCtr,f
  2532  000E  1D03               	btfss	3,2
  2533  000F  2818               	goto	i1l952
  2534                           
  2535                           ;Main.c: 47: {
  2536                           ;Main.c: 48: MidTick_DivCtr = 64;
  2537  0010  3040               	movlw	64
  2538  0011  00F4               	movwf	??_ISR
  2539  0012  0874               	movf	??_ISR,w
  2540  0013  00FB               	movwf	_MidTick_DivCtr
  2541                           
  2542                           ;Main.c: 49: MidTick_Task ++;
  2543  0014  3001               	movlw	1
  2544  0015  00F4               	movwf	??_ISR
  2545  0016  0874               	movf	??_ISR,w
  2546  0017  07D9               	addwf	_MidTick_Task,f
  2547  0018                     i1l952:	
  2548                           
  2549                           ;Main.c: 50: }
  2550                           ;Main.c: 52: CCPR1= Voix_int_Step();
  2551  0018  21B5               	fcall	_Voix_int_Step
  2552  0019  0871               	movf	?_Voix_int_Step+1,w
  2553  001A  0025               	movlb	5	; select bank5
  2554  001B  0092               	movwf	18	;volatile
  2555  001C  0870               	movf	?_Voix_int_Step,w
  2556  001D  0091               	movwf	17	;volatile
  2557  001E                     i1l37:	
  2558  001E  0875               	movf	??_ISR+1,w
  2559  001F  0020               	movlb	0	; select bank0
  2560  0020  00FF               	movwf	127
  2561  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2562  0022  0009               	retfie
  2563  0023                     __end_of_ISR:	
  2564                           
  2565                           	psect	text13
  2566  01B5                     __ptext13:	
  2567 ;; *************** function _Voix_int_Step *****************
  2568 ;; Defined at:
  2569 ;;		line 38 in file "C:\17\D\GitHub\17\PIC\1\16F18 VVVF - 01\Voix.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  rt              2    2[COMMON] unsigned short 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2    0[COMMON] unsigned short 
  2576 ;; Registers used:
  2577 ;;		status,2
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2583 ;;      Params:         2       0       0       0
  2584 ;;      Locals:         2       0       0       0
  2585 ;;      Temps:          0       0       0       0
  2586 ;;      Totals:         4       0       0       0
  2587 ;;Total ram usage:        4 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_ISR
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _Voix_int_Step
  2598  01B5                     _Voix_int_Step:	
  2599                           
  2600                           ;Voix.c: 41: uint16 rt = 0;
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _Voix_int_Step: [status,2]
  2604  01B5  01F2               	clrf	Voix_int_Step@rt
  2605  01B6  01F3               	clrf	Voix_int_Step@rt+1
  2606  01B7  01F0               	clrf	?_Voix_int_Step	;# 
  2607  01B8  01F1               	clrf	?_Voix_int_Step+1	;# 
  2608  01B9  0020               	movlb	0	; select bank0 ;# 
  2609  01BA  0879               	movf	_Vo_1_Freq,w	;# 
  2610  01BB  07CD               	addwf	_Vo_1_Phase,f	;# 
  2611  01BC  087A               	movf	_Vo_1_Freq+1,w	;# 
  2612  01BD  3DCE               	addwfc	_Vo_1_Phase+1,f	;# 
  2613  01BE  084E               	movf	_Vo_1_Phase+1,w	;# 
  2614  01BF  07F0               	addwf	?_Voix_int_Step,f	;# 
  2615  01C0  083E               	movf	_Vo_2_Freq,w	;# 
  2616  01C1  07CB               	addwf	_Vo_2_Phase,f	;# 
  2617  01C2  083F               	movf	_Vo_2_Freq+1,w	;# 
  2618  01C3  3DCC               	addwfc	_Vo_2_Phase+1,f	;# 
  2619  01C4  084C               	movf	_Vo_2_Phase+1,w	;# 
  2620  01C5  07F0               	addwf	?_Voix_int_Step,f	;# 
  2621  01C6  3000               	movlw	0	;# 
  2622  01C7  3DF1               	addwfc	?_Voix_int_Step+1,f	;# 
  2623  01C8  0008               	return	; ;# 
  2624                           
  2625                           ;Voix.c: 72: return 0;
  2626  01C9  01F0               	clrf	?_Voix_int_Step
  2627  01CA  01F1               	clrf	?_Voix_int_Step+1
  2628  01CB  0008               	return
  2629  01CC                     __end_of_Voix_int_Step:	
  2630  007E                     btemp	set	126	;btemp
  2631  007E                     int$flags	set	126
  2632  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        38
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     19      77
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Voix_int_Step

Critical Paths under _main in BANK0

    _main->_MidTick_Step
    _MidTick_Step->_App_Step
    _App_Step->_Train_Step
    _Vol_1_Change->_Train_Set_Acc
    _Train_Step->_Voix_Set_Speed
    _App_Init->_Voix_Set_Speed

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1279
                           _App_Init
                          _Chip_Init
                       _MidTick_Step
 ---------------------------------------------------------------------------------
 (1) _MidTick_Step                                         2     2      0    1056
                                             17 BANK0      2     2      0
                           _App_Step
 ---------------------------------------------------------------------------------
 (2) _App_Step                                             5     5      0    1056
                                             12 BANK0      5     5      0
                             _ADC_Go
                            _ADC_Res
                         _Noise_Step
                         _Train_Step
                       _Vol_1_Change
 ---------------------------------------------------------------------------------
 (3) _Vol_1_Change                                         3     3      0     542
                                              4 BANK0      3     3      0
                      _Train_Set_Acc
 ---------------------------------------------------------------------------------
 (4) _Train_Set_Acc                                        4     1      3     322
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _Train_Step                                           6     6      0     226
                                              6 BANK0      6     6      0
                     _Voix_Set_Speed
 ---------------------------------------------------------------------------------
 (3) _Noise_Step                                           4     4      0     161
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _ADC_Res                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Go                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Chip_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     223
                     _Voix_Set_Speed
 ---------------------------------------------------------------------------------
 (4) _Voix_Set_Speed                                       6     4      2     223
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       1
                                              4 COMMON     2     2      0
                      _Voix_int_Step
 ---------------------------------------------------------------------------------
 (6) _Voix_int_Step                                        4     2      2       1
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Voix_Set_Speed
   _Chip_Init
   _MidTick_Step
     _App_Step
       _ADC_Go
       _ADC_Res
       _Noise_Step
       _Train_Step
         _Voix_Set_Speed
       _Vol_1_Change
         _Train_Set_Acc

 _ISR (ROOT)
   _Voix_int_Step

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      4D       6       96.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      59      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Nov 11 20:06:21 2017

            __CFG_CP$OFF 0000                       l81 00A2                      l160 0141  
                    l970 013B                      l974 011A                      l976 0143  
                    l996 0103                      _PR2 001E                      u610 0129  
           __CFG_CPD$OFF 0000                      u620 012A                      _ISR 0004  
                    u605 011F                      u630 0131                      u640 0132  
                    u705 00E3                      u575 014B                      u815 01D6  
                    u585 0158                      u595 0161                      u765 00BE  
                    u775 00D0                      u795 0078          __end_of_ADC_Res 020F  
                    wreg 0009         Train_Set_Acc@acc 005A             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     l1020 00D9                     l1012 00C5  
                   l1014 00CA                     l1030 005D                     l1040 0087  
                   l1032 005F                     l1018 00D7                     l1052 0096  
                   l1046 0091                     l1048 0093                     l1090 01E1  
                   _LATA 010C                     _PIE1 0091                     i1l37 001E  
                   _TMR2 001D           ??_MidTick_Step 006B             __CFG_WRT$OFF 0000  
                   _main 01DF                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000            __CFG_BORV$LOW 0000  
                   start 0023            __CFG_CSWEN$ON 0000           _Voix_Set_Speed 0145  
             _App_Output 0076                    ??_ISR 0074                    ?_main 0070  
                  _CCPR1 0291            __CFG_WDTE$OFF 0000                    _T2CON 001F  
         __CFG_DEBUG$OFF 0000                    i1l952 0018            _Voix_int_Step 01B5  
                  _TRISA 008C            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
                  _Vol_1 0057                    status 0003                    wtemp0 007E  
       __end_of_App_Init 0205         __end_of_App_Step 00A3   __end_of_Voix_Set_Speed 016C  
         __CFG_MCLRE$OFF 0000          __initialization 0024             __end_of_main 01E9  
     __size_of_Chip_Init 0026                ??_ADC_Res 005A                   ??_main 006D  
         ?_Voix_int_Step 0070               _Vo_1_Phase 004D               _Vo_2_Phase 004B  
                 _ADCON0 009D                   _ADCON1 009E                   _ADC_Go 0205  
                 _ADRESH 009C                   _ANSELA 018C                   _RA4PPS 0E94  
                 _INTCON 000B                   _TMR2IF 0089               _Noise_Seed 003A  
             _Noise_Step 0118          ?_Voix_Set_Speed 005A           __CFG_STVREN$ON 0000  
   __end_of_MidTick_Step 01DF          _App_Tempo_Phase 0051               _Train_Step 00A3  
           __pdataCOMMON 0079               _Vol_margin 020F        __end_of_Chip_Init 0192  
__end_of__initialization 0041           __pcstackCOMMON 0070             __pidataBANK0 0192  
        ??_Voix_int_Step 0072                ?_App_Init 0070                ?_App_Step 0070  
                ?_ADC_Go 0070              Noise_Step@a 005C              Noise_Step@b 005D  
             __pbssBANK0 0043              ?_Noise_Step 0070               __pmaintext 01DF  
  __end_of_Train_Set_Acc 01F3               __pintentry 0004                  _CCP1CON 0293  
                _ADC_Res 020C      __CFG_RSTOSC$HFINT32 0000              ?_Train_Step 0070  
                _LED_Ctr 0053            ?_Vol_1_Change 0070               ??_App_Init 0060  
             ??_App_Step 0066          __size_of_ADC_Go 0004                  _Vo_WT_1 0043  
             _down_table 002E                  _Vol_1_s 0078            App_Step@phase 0056  
  __size_of_MidTick_Step 0013                  __ptext1 01CC                  __ptext2 0044  
                __ptext3 00DF                  __ptext4 01E9                  __ptext5 00A3  
                __ptext6 0118                  __ptext7 020C                  __ptext8 0205  
                __ptext9 016C             __size_of_ISR 001F      __size_of_Noise_Step 002D  
         ??_Vol_1_Change 005E                  clrloop0 01FA     end_of_initialization 0041  
       ??_Voix_Set_Speed 005C                  init_ram 01F3             _MidTick_Task 0059  
            _Train_Speed 0040             _MidTick_Step 01CC                  initloop 01F4  
    __size_of_Train_Step 003C              Train_Step@s 0064             __pstringtext 020F  
         Noise_Step@bits 005B         __CFG_FEXTOSC$OFF 0000           __end_of_ADC_Go 0209  
        Train_Set_Acc@up 005C                _Chip_Init 016C                _App_Noise 0058  
              _App_Tempo 0042            __pidataCOMMON 0209      start_initialization 0024  
            __end_of_ISR 0023                 ??_ADC_Go 005A        __size_of_App_Init 0006  
      __size_of_App_Step 005F                _Vo_1_Freq 0079                _Vo_2_Freq 003E  
           ??_Noise_Step 005A               ?_Chip_Init 0070     __end_of_Vol_1_Change 0118  
       __CFG_LPBOREN$OFF 0000            Vol_1_Change@s 0060              __pdataBANK0 0020  
              _Train_Acc 004F                 ?_ADC_Res 0070    __end_of_Voix_int_Step 01CC  
           ??_Train_Step 0060       __end_of_Noise_Step 0145              __pbssCOMMON 0076  
              ___latbits 0000            __pcstackBANK0 005A       __end_of_Train_Step 00DF  
       __CFG_PPS1WAY$OFF 0000       __end_of_Vol_margin 0210   __size_of_Train_Set_Acc 000A  
              clear_ram0 01F9              ??_Chip_Init 005A         __size_of_ADC_Res 0003  
    Voix_Set_Speed@speed 005A                 _App_Init 01FF                 _App_Step 0044  
  __size_of_Vol_1_Change 0039           _MidTick_DivCtr 007B            _Train_Set_Acc 01E9  
               _Train_Up 0055          Voix_int_Step@rt 0072             _Vol_1_Change 00DF  
               __ptext10 01FF                 __ptext11 0145                 __ptext13 01B5  
            App_Step@vol 006A            __size_of_main 000A           ?_Train_Set_Acc 005A  
__size_of_Voix_Set_Speed 0027                 int$flags 007E                 _up_table 0020  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000               _OSCFRQbits 091F  
          ?_MidTick_Step 0070   __size_of_Voix_int_Step 0017          ??_Train_Set_Acc 005D  
